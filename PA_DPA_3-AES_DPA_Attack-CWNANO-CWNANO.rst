
PA\_DPA\_3-AES\_DPA\_Attack
===========================

Before starting this tutorial, it's recommended that you first complete
the earlier PA\_DPA tutorials since these will familiarize you with the
concept of Differental Power Analysis. With that out of the way, let's
look at how this attack works.

DPA Attack Theory
-----------------

As we explored in the earlier DPA tutorials, the Hamming Weight of the
result of the SBox operation in AES has a measurable effect on the power
consumed by the microcontroller. It turns out that just this effect (and
not anything stronger, such as its linearity) is enough information to
break an AES key. There's a few different ways we could go about this,
but for this tutorial, we'll be looking at difference of means. With
this technique, the goal is to separate the traces by a bit in the
result of the SBox output (it doesn't matter which one): if that bit is
1, its group of traces should, on average, have higher power consumption
during the SBox operation than the other set.

Whether or not we get a large difference in the means between these two
groups depends on whether they were properly sorted into these groups.
If not, there should be, on average, little difference between the two
and therefore a low difference of means. Recall the SBox operation:

.. figure:: https://wiki.newae.com/images/7/71/Sbox_cpa_detail.png
   :alt: title

   title

The SBox output depends on the subkey, which we don't know (and the
plaintext, which we do). However, since there's a large difference of
means for the correct key and small ones for the rest of the possible
subkeys, we have a method of checking whether a given subkey is correct.
If we calculate the difference of means for each subkey, the correct one
will have the largest difference of means.

Our plan looks as follows 1. Capture a bunch of power traces with
varying plaintext 1. Group each trace by the value of their SBox
output's lowest bit for a given key guess 1. Calculate the difference of
means 1. Repeat for each possible subkey 1. Select the largest
difference of means -> this is the correct subkey 1. Repeat for each
subkey in the key

At the end, we should get a correct AES key!


**In [1]:**

.. code:: ipython3

    SCOPETYPE = 'CWNANO'
    PLATFORM = 'CWNANO'
    CRYPTO_TARGET = 'TINYAES128C'


**In [2]:**

.. code:: bash

    %%bash -s "$PLATFORM" "$CRYPTO_TARGET"
    cd ../hardware/victims/firmware/simpleserial-aes
    make PLATFORM=$1 CRYPTO_TARGET=$2


**Out [2]:**



.. parsed-literal::

    rm -f -- simpleserial-aes-CWNANO.hex
    rm -f -- simpleserial-aes-CWNANO.eep
    rm -f -- simpleserial-aes-CWNANO.cof
    rm -f -- simpleserial-aes-CWNANO.elf
    rm -f -- simpleserial-aes-CWNANO.map
    rm -f -- simpleserial-aes-CWNANO.sym
    rm -f -- simpleserial-aes-CWNANO.lss
    rm -f -- objdir/\*.o
    rm -f -- objdir/\*.lst
    rm -f -- simpleserial-aes.s simpleserial.s stm32f0_hal_nano.s stm32f0_hal_lowlevel.s aes.s aes-independant.s
    rm -f -- simpleserial-aes.d simpleserial.d stm32f0_hal_nano.d stm32f0_hal_lowlevel.d aes.d aes-independant.d
    rm -f -- simpleserial-aes.i simpleserial.i stm32f0_hal_nano.i stm32f0_hal_lowlevel.i aes.i aes-independant.i
    .
    -------- begin --------
    arm-none-eabi-gcc (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907]
    Copyright (C) 2017 Free Software Foundation, Inc.
    This is free software; see the source for copying conditions.  There is NO
    warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    
    .
    Compiling C: simpleserial-aes.c
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/simpleserial-aes.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/simpleserial-aes.o.d simpleserial-aes.c -o objdir/simpleserial-aes.o 
    .
    Compiling C: .././simpleserial/simpleserial.c
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/simpleserial.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/simpleserial.o.d .././simpleserial/simpleserial.c -o objdir/simpleserial.o 
    .
    Compiling C: .././hal/stm32f0_nano/stm32f0_hal_nano.c
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/stm32f0_hal_nano.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/stm32f0_hal_nano.o.d .././hal/stm32f0_nano/stm32f0_hal_nano.c -o objdir/stm32f0_hal_nano.o 
    .
    Compiling C: .././hal/stm32f0/stm32f0_hal_lowlevel.c
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/stm32f0_hal_lowlevel.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/stm32f0_hal_lowlevel.o.d .././hal/stm32f0/stm32f0_hal_lowlevel.c -o objdir/stm32f0_hal_lowlevel.o 
    .
    Compiling C: .././crypto/tiny-AES128-C/aes.c
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/aes.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/aes.o.d .././crypto/tiny-AES128-C/aes.c -o objdir/aes.o 
    .
    Compiling C: .././crypto/aes-independant.c
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/aes-independant.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/aes-independant.o.d .././crypto/aes-independant.c -o objdir/aes-independant.o 
    .
    Assembling: .././hal/stm32f0/stm32f0_startup.S
    arm-none-eabi-gcc -c -mcpu=cortex-m0 -I. -x assembler-with-cpp -mthumb -mfloat-abi=soft -ffunction-sections -DF_CPU=7372800 -Wa,-gstabs,-adhlns=objdir/stm32f0_startup.lst -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C .././hal/stm32f0/stm32f0_startup.S -o objdir/stm32f0_startup.o
    .
    Linking: simpleserial-aes-CWNANO.elf
    arm-none-eabi-gcc -mcpu=cortex-m0 -I. -DNO_EXTRA_OPTS -mthumb -mfloat-abi=soft -ffunction-sections -gdwarf-2 -DSS_VER=SS_VER_1_1 -DSTM32F030x6 -DSTM32F0 -DSTM32 -DDEBUG -DHAL_TYPE=HAL_stm32f0_nano -DPLATFORM=CWNANO -DTINYAES128C -DF_CPU=7372800UL -Os -funsigned-char -funsigned-bitfields -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=objdir/simpleserial-aes.o -I.././simpleserial/ -I.././hal -I.././hal/stm32f0 -I.././hal/stm32f0/CMSIS -I.././hal/stm32f0/CMSIS/core -I.././hal/stm32f0/CMSIS/device -I.././hal/stm32f0/Legacy -I.././crypto/ -I.././crypto/tiny-AES128-C -std=gnu99 -MMD -MP -MF .dep/simpleserial-aes-CWNANO.elf.d objdir/simpleserial-aes.o objdir/simpleserial.o objdir/stm32f0_hal_nano.o objdir/stm32f0_hal_lowlevel.o objdir/aes.o objdir/aes-independant.o objdir/stm32f0_startup.o --output simpleserial-aes-CWNANO.elf --specs=nano.specs --specs=nosys.specs -T .././hal/stm32f0_nano/LinkerScript.ld -Wl,--gc-sections -lm -mthumb -mcpu=cortex-m0  -Wl,-Map=simpleserial-aes-CWNANO.map,--cref   -lm  
    .
    Creating load file for Flash: simpleserial-aes-CWNANO.hex
    arm-none-eabi-objcopy -O ihex -R .eeprom -R .fuse -R .lock -R .signature simpleserial-aes-CWNANO.elf simpleserial-aes-CWNANO.hex
    .
    Creating load file for EEPROM: simpleserial-aes-CWNANO.eep
    arm-none-eabi-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
    	--change-section-lma .eeprom=0 --no-change-warnings -O ihex simpleserial-aes-CWNANO.elf simpleserial-aes-CWNANO.eep || exit 0
    .
    Creating Extended Listing: simpleserial-aes-CWNANO.lss
    arm-none-eabi-objdump -h -S -z simpleserial-aes-CWNANO.elf > simpleserial-aes-CWNANO.lss
    .
    Creating Symbol Table: simpleserial-aes-CWNANO.sym
    arm-none-eabi-nm -n simpleserial-aes-CWNANO.elf > simpleserial-aes-CWNANO.sym
    Size after:
       text	   data	    bss	    dec	    hex	filename
       5012	    536	   1480	   7028	   1b74	simpleserial-aes-CWNANO.elf
    +--------------------------------------------------------
    + Built for platform CWNANO STM32F030
    +--------------------------------------------------------



Capturing Power Traces
----------------------

Capture and setup is similar to earlier tutorials. We'll have to capture
a fair number of traces (usually a few thousand here) since Difference
of Means isn't a super trace efficient method. As you'll find during the
CPA tutorials, CPA is much better in this regard - it can often break
AES implementations such as these in under 50 traces.

You may also find that you need to modify gain settings and the number
of traces you capture - this attack is much more sensitive to gain
settings and noise than a CPA attack would be.

Setup
~~~~~


**In [3]:**

.. code:: ipython3

    %run "Helper_Scripts/Setup.ipynb"


**In [4]:**

.. code:: ipython3

    fw_path = "../hardware/victims/firmware/simpleserial-aes/simpleserial-aes-{}.hex".format(PLATFORM)


**In [5]:**

.. code:: ipython3

    cw.program_target(scope, prog, fw_path)


**Out [5]:**



.. parsed-literal::

    Detected unknown STM32F ID: 0x445
    Extended erase (0x44), this can take ten seconds or more
    Attempting to program 5547 bytes at 0x8000000
    STM32F Programming flash...
    STM32F Reading flash...
    Verified flash OK, 5547 bytes
    


Capture
~~~~~~~


**In [6]:**

.. code:: ipython3

    #Capture Traces
    from tqdm import tnrange
    import numpy as np
    import time
    
    ktp = cw.ktp.Basic()
    
    traces = []
    N = 2500  # Number of traces
    
    if PLATFORM == "CWLITEARM" or PLATFORM == "CW308_STM32F3":
        scope.adc.samples = 4000
    elif PLATFORM == "CWLITEXMEGA" or PLATFORM == "CW303":
        scope.gain.db = 34 #works best with this gain for some reason
        scope.adc.samples = 1700 - 170
        scope.adc.offset = 500 + 700 + 170
        N = 5000
        
    print(scope)
    for i in tnrange(N, desc='Capturing traces'):
        key, text = ktp.next()  # manual creation of a key, text pair can be substituted here
    
        trace = cw.capture_trace(scope, target, text, key)
        if trace is None:
            continue
        print(trace)
    
        traces.append(trace)
    
    #Convert traces to numpy arrays
    trace_array = np.asarray([trace.wave for trace in traces])
    print(trace_array)# if you prefer to work with numpy array for number crunching
    textin_array = np.asarray([trace.textin for trace in traces])
    known_keys = np.asarray([trace.key for trace in traces])  # for fixed key, these keys are all the same


**Out [6]:**



.. parsed-literal::

    ChipWhisperer Nano Device
    io = 
        tio1   = None
        tio2   = None
        tio3   = None
        tio4   = None
        pdid   = True
        pdic   = False
        nrst   = True
        clkout = 7500000.0
    adc = 
        clk_src  = int
        clk_freq = 7500000.0
        samples  = 5000
    glitch = 
        repeat     = 0
        ext_offset = 0
    
    






.. parsed-literal::

    Trace(wave=array([-0.01953125,  0.12109375, -0.0703125 , ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'11 a0 db f2 b1 2a 90 aa 94 e7 e7 75 1c fa f5 1c'), textout=CWbytearray(b'7d b1 20 92 73 85 59 5e f7 ec 75 f6 6e a3 de 4d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.11328125, -0.10546875, ...,  0.01171875,
           -0.18359375,  0.02734375]), textin=CWbytearray(b'74 64 fb f1 0b c0 7c fb fd a5 89 3b a0 62 0f a6'), textout=CWbytearray(b'fe a2 3d 17 99 b4 80 5d 91 3e 3f ca 46 a4 27 c9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'db e5 72 52 70 35 bf be 5f a7 c2 c6 ea 73 a9 d1'), textout=CWbytearray(b'3e a9 72 c5 a4 a4 73 48 d6 48 c9 c2 7a 48 fe d6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08984375, ...,  0.01171875,
           -0.1640625 ,  0.02734375]), textin=CWbytearray(b'59 0d f3 42 ce 27 75 0a 57 5c 2c 8c 78 3b 62 6d'), textout=CWbytearray(b'5a 90 79 05 aa 29 4e f7 bd cd a6 1b ac fe e2 df'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1328125 , -0.08984375, ...,  0.015625  ,
           -0.16796875,  0.03125   ]), textin=CWbytearray(b'e9 f7 18 c0 2a 60 b5 b7 68 b1 c1 9e f5 5f a4 cc'), textout=CWbytearray(b'b5 04 38 92 30 79 aa 10 02 2f d5 6f d5 3e ce 0e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'15 dd 57 39 f3 9a 24 3f bf 07 a2 2f bb ef 7d 2c'), textout=CWbytearray(b'9b 00 5e fa 8b 4f cc 57 17 01 1a 9f 34 44 3c 4c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.09765625, ...,  0.01171875,
           -0.1640625 ,  0.03515625]), textin=CWbytearray(b'0d 9a d3 16 36 df b7 22 2b be 85 35 58 0c 1c b2'), textout=CWbytearray(b'25 1b e4 6f 77 ba 30 27 dd 31 c5 30 47 0b 25 b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.015625  ,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'1b 33 1d 78 d3 90 88 50 f5 3b 97 91 c3 23 ca 33'), textout=CWbytearray(b'7d 89 f4 68 6c cb 3a 88 84 bb ee fc 36 2a 27 99'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'4f a2 33 0b 0b d8 f7 73 52 74 ef 42 e8 a1 ed b2'), textout=CWbytearray(b'81 d7 bf 1e 59 21 cb 54 5f 62 af 3a 00 0e f9 a1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.09765625, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'8b cb 9e 29 4a ba 86 9f 7d 9c 17 61 5f f0 0b fb'), textout=CWbytearray(b'74 93 e3 ff 62 87 dc 5a ae ed 03 e2 29 c0 30 6f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08984375, ...,  0.01953125,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'9c c0 66 a0 0f 39 7b 7d b3 18 4c 15 73 d2 bb c3'), textout=CWbytearray(b'56 2f 1e 2a ca 4f 22 97 2e fb 39 e0 c1 27 b5 b5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'1d a8 59 45 07 50 ff c1 c0 34 de 40 a8 22 70 3f'), textout=CWbytearray(b'58 29 b9 f6 b3 d5 b3 c7 db d8 95 7f 6b 5e 3e 6c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'2b 8d 56 94 44 27 60 45 06 60 8d c3 84 fe 07 12'), textout=CWbytearray(b'03 ff 83 0a 90 9d ec 3e 16 f3 62 df 22 27 e5 c4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.0859375 , ...,  0.01171875,
           -0.1640625 ,  0.03125   ]), textin=CWbytearray(b'7c d4 bd 64 83 82 60 98 7f f0 cf a1 80 59 36 2f'), textout=CWbytearray(b'4a 64 dd 56 d1 2c ea 4d 1c 01 04 a3 88 7c 54 ac'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'19 52 a4 7c 97 c2 fe 29 c0 3b 6a 5c 85 bb e7 19'), textout=CWbytearray(b'6b ad 67 f6 66 55 62 91 0f 43 01 6f 28 6d 49 92'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'55 83 1d 45 f5 73 bc 8b 77 b2 70 d6 61 fb 60 e9'), textout=CWbytearray(b'6b a0 18 59 74 a3 54 2d 51 d7 5b ca 26 a9 7c 67'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'fd 1d 2d 28 93 50 2d 27 b8 a1 1a f8 f9 86 36 e4'), textout=CWbytearray(b'85 32 b5 eb 9d a1 3f 5f c3 1d 80 e7 e7 f1 14 49'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.0859375 , ...,  0.01953125,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'72 be ee 0d ef c9 52 f3 b1 59 45 2d 89 13 8b ac'), textout=CWbytearray(b'8d 3c 7c 0f 2a 9a 91 13 fa ea e7 1d d1 24 84 de'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'96 ab 26 1a 16 3e 25 0f 76 d9 cd 7a 3f 91 87 07'), textout=CWbytearray(b'02 38 9d bc 9e 87 5d b9 47 5c ba b5 29 ea 67 e0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08984375, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'8c 4f b0 b7 88 4e f8 e9 ca 96 4b 83 57 ad 63 0b'), textout=CWbytearray(b'd3 7f 70 5b 9f f1 c9 27 c3 87 4f ad fd ff 09 17'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'bb 01 33 6e f1 b4 f3 7c 87 58 34 17 79 da 0b f2'), textout=CWbytearray(b'76 66 ec 0c 33 e2 1f c4 9c af 60 94 f4 ec eb ac'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'4c aa 57 02 fd c6 5e b2 d0 00 42 7c e0 fc d7 e9'), textout=CWbytearray(b'1c f3 27 39 89 0b 1c 15 49 3c 31 27 3b a8 32 d6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.07421875, ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'ff de ad 01 ae 6e 74 13 00 4c ca 89 04 8a 24 6f'), textout=CWbytearray(b'55 c1 44 ab 98 3d f7 bb 71 43 15 44 a0 d2 b1 7a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.1640625 ,  0.01953125]), textin=CWbytearray(b'b8 7f 2d 02 40 8b fe f5 10 8f 2f 5f 80 7e fb 2b'), textout=CWbytearray(b'8e 2a 69 bb f3 45 bb 80 cb 36 08 5d a2 4e 7c 6f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.02734375,
           -0.15234375,  0.046875  ]), textin=CWbytearray(b'41 ec 7d 24 5c 03 e4 ee 42 77 56 ba 4f 6c 6d fb'), textout=CWbytearray(b'8d c6 96 5a 3f d9 7d 6f af 24 49 66 69 35 85 df'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'dd 2b 4b 1e 06 bf b7 12 62 bb 04 d4 1b 2d 82 69'), textout=CWbytearray(b'd1 55 29 c1 18 d7 d5 b0 a7 d0 fb 69 3d 6c 11 fe'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08203125, ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'1f 95 45 ce db 7a bb 08 24 f2 e0 aa 41 0d 22 50'), textout=CWbytearray(b'e1 02 a7 42 33 40 1a 25 25 6d 55 1c 5e c6 30 93'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.1171875 , -0.08984375, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'9c 51 17 9a c8 f7 bc 8a d0 61 ee e4 e7 4f f1 f3'), textout=CWbytearray(b'6c d1 4e a2 2e 21 da 52 d1 8a 6a 2d 91 9a 03 b9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'82 39 29 65 34 4c f2 3b 21 c2 19 7a f8 18 54 6d'), textout=CWbytearray(b'31 9f e2 a2 d2 28 96 4b fa a8 6c 0b 32 a9 3a 52'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.0859375 , ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'c5 33 07 ce 5b 85 df 59 69 f5 90 05 a2 59 94 f6'), textout=CWbytearray(b'9a a0 d6 8e fe 9e d4 c3 68 47 8a ef 2b eb f9 bb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08203125, ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'5d 2d e8 35 7e e7 78 d0 a9 f3 3e 6d 25 81 ea 8e'), textout=CWbytearray(b'0b f5 89 aa fb 18 34 e2 98 8f 35 fd 19 1d de 97'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.08984375, ...,  0.02734375,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'86 d3 96 d5 20 65 fd 7e b4 ee 5b 6d 07 2f 1a 5b'), textout=CWbytearray(b'e7 79 5b 0f b7 45 30 f9 e1 33 35 ce 2e e0 4f 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1328125 , -0.078125  , ...,  0.015625  ,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'0d 01 e9 4e c2 98 f2 ca f7 d8 37 48 58 94 f7 d8'), textout=CWbytearray(b'f6 a9 55 01 31 b3 af 31 f4 9d 59 e3 b3 8f e3 83'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'04 4f 92 55 63 9c a5 f4 bd 86 24 e9 f3 66 67 3d'), textout=CWbytearray(b'1b 52 7c 6b 59 d8 cb 5f 5a 87 93 de 96 f3 05 19'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'52 fe a2 8a 75 6f d1 41 c9 0d 20 29 73 86 54 18'), textout=CWbytearray(b'7b 4d 0d a4 c3 12 d0 55 b2 2b 68 54 00 d7 de ea'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b9 45 a9 9d ec 08 15 60 64 a1 52 42 81 c9 2c 7f'), textout=CWbytearray(b'8e af 10 26 ce ee 7d 0e ed 7b 5d 3a 66 ae 4d ac'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'0e 57 d5 22 7f c2 6f 15 0a 67 ce d7 09 a8 f9 d0'), textout=CWbytearray(b'be 03 b0 73 28 cc 35 03 71 f7 54 91 52 fe 05 e0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'91 68 9a 81 79 8e 32 28 3e 17 34 a9 e6 fd 1a 7b'), textout=CWbytearray(b'9c bb 77 24 b2 3e 3e 89 c6 89 95 b0 ea 13 cb 29'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.08984375, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'69 9e 2a 5c d1 e1 43 6e b7 f2 ce f3 0d f0 1a 23'), textout=CWbytearray(b'a1 35 ce df a1 09 77 e9 26 42 d6 05 74 5c 97 de'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.13671875, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'af 76 a1 8b c0 f9 dc 73 a9 e5 9f 3f 40 df b6 14'), textout=CWbytearray(b'd1 a4 b7 25 68 16 c9 1d ab 6e 80 67 c5 e5 76 7d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'67 dc 3e 67 d9 91 5d 83 f0 bf c9 e3 a8 76 92 bb'), textout=CWbytearray(b'54 01 57 e2 75 5c 78 d1 05 15 94 cd 2c bd bb d0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'c7 24 99 4a 4e 60 38 48 78 67 ad 02 17 67 88 97'), textout=CWbytearray(b'3f 9b 97 0f 18 dd e5 37 98 02 40 66 81 08 ab 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.125     , -0.08984375, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'36 58 e7 7d 6a 0e 8e e8 25 c3 76 33 bd c5 4e a0'), textout=CWbytearray(b'f9 5b 68 f9 f5 c2 90 58 44 ba fb 8b 7f 49 7a 5b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'22 92 33 60 96 b6 b9 77 2a 48 ef ea 64 4c ca f5'), textout=CWbytearray(b'81 66 bb cc 19 74 f7 c0 c1 62 26 49 f4 2e 85 6a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.0859375 , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'92 12 a8 ef 66 8a c6 86 1b bf 5b 6b 1b 1e 3b dc'), textout=CWbytearray(b'47 2b 47 83 d9 1f f7 45 fa 40 e8 23 af 3e 6a 7a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0859375 , ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'1d 95 f2 a7 ac d2 6e 2a 50 d6 80 cd 04 82 e4 ab'), textout=CWbytearray(b'42 e9 53 12 c4 e1 7d 3e 95 4a c0 2e c8 53 29 13'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'1a a1 e9 bf e5 62 e9 e4 92 fd 7a 08 33 d4 7d e4'), textout=CWbytearray(b'43 ca e4 a8 f9 0f 5d 7d e2 27 8f c3 de 2b a7 3d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'4e 47 e8 dd 0e af a7 0b f8 ad b8 8e ae e7 32 1e'), textout=CWbytearray(b'20 d6 a8 e8 99 f6 cc 52 86 4a 4d 94 f0 f0 c1 9e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.0859375 , ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'64 73 9d f6 5d 16 0e 2e b4 1c 34 c9 e1 08 02 1c'), textout=CWbytearray(b'db ee 6f b1 e1 3e c4 1b 19 9f 78 15 76 3d e2 85'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.08984375, ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'ac da 66 2d 32 df 0f fa a3 e1 9e 4a d7 0b a1 cf'), textout=CWbytearray(b'0a 84 37 d5 32 31 31 53 08 82 6a 89 f8 57 be 71'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'8e 77 98 ae 86 b4 56 87 9a dd e6 16 6e 1a 7e 44'), textout=CWbytearray(b'4a 24 49 57 7c 9f 39 06 87 c8 b7 48 9f d4 7a f3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'e5 65 63 7a 27 ac 54 ab cf b0 62 88 e8 55 66 b7'), textout=CWbytearray(b'f0 3b 1d 4f 82 2d 3b 58 c2 d5 2b a3 7a 4d d3 86'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0859375 , ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'cc ef 78 88 2b e5 3e e0 8f 77 24 d2 a8 3d e1 8b'), textout=CWbytearray(b'a6 3c 53 55 24 e7 70 9d e3 17 2e ad a9 ef 43 1a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'52 1c de 2c 68 f7 59 8b b4 f6 77 f6 7a 6e a3 fa'), textout=CWbytearray(b'43 56 75 78 2f c5 fa a6 07 59 c6 dc 65 ed a5 c6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'f3 d0 dc 7b c7 a1 5c 95 ef 37 c7 83 3b 00 df 0f'), textout=CWbytearray(b'e6 cb 5d 35 f2 ff 9d 21 d9 3b 4d 94 f4 42 d2 90'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.08984375, ...,  0.01171875,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'76 ba be 04 f7 71 b3 2c e4 cc 91 3b 76 b7 a3 57'), textout=CWbytearray(b'a3 d1 94 eb dc db 0f 1f d5 57 c3 8d c7 4c 6e b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'04 87 66 79 d2 79 cb 40 b0 f4 a7 8d c1 ef 6b 32'), textout=CWbytearray(b'08 75 38 7a 3f c7 36 ba 07 a2 25 3f ce ca 48 0c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.11328125, -0.08203125, ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'54 63 67 ba ac d8 a1 d1 a1 ab f2 fc 8f 57 8a 3d'), textout=CWbytearray(b'01 31 b0 e1 58 8a 77 d6 81 fa 61 1f 29 93 c8 fb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'9d 03 0f 6c 71 35 02 60 1b cb 3d 4f be 43 d0 16'), textout=CWbytearray(b'dd 5e 83 f4 6e db ef 3e db 01 fa 4c eb 2b 82 52'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'9e 1b c5 44 cf b8 75 32 0f b0 50 b0 46 3a df 3f'), textout=CWbytearray(b'64 2a c4 b5 9f b5 75 02 1a e0 c9 b4 d8 3b 9a 48'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'e1 c1 2d f8 55 74 a9 0a 84 16 4d 25 af 6c 49 c9'), textout=CWbytearray(b'a3 2e 82 ee 1c e2 34 0d 2a fc a7 af dd 01 34 47'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'04 e9 74 59 af 8d 07 43 11 f5 b3 36 84 68 31 fe'), textout=CWbytearray(b'f6 21 ff 0c 48 11 74 e0 b8 3d c1 1d 9d 69 75 12'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'69 07 6c 8e be 48 b5 d0 05 3f bd e2 12 49 08 0f'), textout=CWbytearray(b'e9 9c d2 bd af 14 ff 85 b8 1e 69 77 04 04 c4 39'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'87 94 dd d9 e6 16 0b 91 4e 60 cb cb a2 03 e9 a9'), textout=CWbytearray(b'e8 a9 27 e2 34 dc 74 8b 83 ad f2 f1 99 58 91 e0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.08984375, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'15 40 de 66 bd 27 b8 d4 97 05 cd 0a d5 14 a2 71'), textout=CWbytearray(b'5f 81 9f b9 f6 c2 d2 49 68 66 aa 02 72 67 c6 5c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'56 b6 36 11 a2 42 21 2d 22 10 26 83 23 8e e2 e1'), textout=CWbytearray(b'd6 1b c8 89 be 4d ce 43 6d d0 37 11 c9 35 7d a9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'40 3f 5a 74 50 b8 0c be ac 02 4a c9 03 32 31 ae'), textout=CWbytearray(b'5f c6 fb 69 1e a0 b6 d5 0c d8 38 d3 97 e2 5d 3a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.125     , -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'b1 e8 71 c6 9b 88 9a 65 6a 45 9f a6 a7 0d 16 fd'), textout=CWbytearray(b'61 cf 94 e3 d5 c1 73 b4 08 45 30 53 41 05 4e 4f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'55 8c 99 ca 19 6f ed 61 4e e1 4b 27 82 8b ec dd'), textout=CWbytearray(b'd7 4a b8 bb f5 48 b5 dc c3 ee 64 55 a3 21 6e ce'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'a1 5f d4 50 2e b6 d0 cc 27 06 ec b5 46 bb 86 8b'), textout=CWbytearray(b'49 63 f7 1b 3a 4a 7c fe 29 10 e8 73 23 4c d4 47'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'30 32 a2 77 b5 2e 60 ba 92 10 14 fd a7 82 9d 2a'), textout=CWbytearray(b'fa 57 12 42 40 72 a0 95 a4 aa 93 3d eb ee 2b da'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.02734375,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'a7 e2 5a fe e9 f1 3a 32 0b 71 3e d5 b1 4f e0 b0'), textout=CWbytearray(b'39 43 75 8b d5 c8 1f 41 1a 0f 16 ba e6 1f 87 14'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'7c ad 97 84 29 65 ab 3a 40 46 49 bd e4 c5 de 93'), textout=CWbytearray(b'ef a3 8e 0c 97 0a 51 f3 81 36 38 a4 ce dc 8e 1e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'af 81 74 d1 cc 5a 4f 66 5b 2e 5d 19 f9 8d 0f ef'), textout=CWbytearray(b'ec f0 fb 4f 87 b4 50 78 eb 85 fd 8a 1c 85 e1 be'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'e6 1b 62 80 44 c2 07 70 47 11 a7 de 5f b2 86 89'), textout=CWbytearray(b'fa ed a7 5a 3b 9d a5 ae 25 33 41 1d 3f 7e e6 b0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'7b ce 40 08 c0 d7 fb 13 2a 59 25 83 2e 5c 6a e4'), textout=CWbytearray(b'be 50 a9 61 0e 45 ba 6d 4d 63 8f 33 49 4c c1 49'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'11 dd 0e b9 d7 71 01 a5 44 0f 52 9a 8a a3 9d 96'), textout=CWbytearray(b'a9 c9 f6 45 86 1a 42 b5 93 c2 38 52 9a d9 3d 2b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'02 48 85 c3 e4 e1 43 f1 6f 03 cf 2f 14 40 57 a1'), textout=CWbytearray(b'c4 1b 16 34 30 0d 0c 78 18 30 1d 42 d4 ed 1c d9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'e0 b2 eb c0 6a 22 58 49 71 ac fc 5d 68 d5 a2 7e'), textout=CWbytearray(b'3d 4d 6f ff 46 1a c8 29 ab f2 87 cc 94 73 7b 6d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'b6 f5 72 1c 0a 72 ba 19 68 f3 0f f8 7b cb 6b df'), textout=CWbytearray(b'56 ba 2f 94 b5 42 35 d5 08 c5 ba 33 12 11 c7 25'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'15 0b 0b fc 6b 98 bc 0e 18 0a e4 46 b2 56 9d 83'), textout=CWbytearray(b'd8 5c 00 87 52 d0 13 7e dc 8e 7e 73 c2 3c 4b f1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'6d ff 46 7a 4d 32 2a 83 1a 15 1b be 6a 1e e3 f8'), textout=CWbytearray(b'37 78 d1 67 54 4a cf 86 4d 31 28 37 c4 b9 7a ba'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'0e 7d dc d2 d2 f0 2d 92 9c 07 1e 77 f3 89 82 9f'), textout=CWbytearray(b'd2 b7 5b c2 b8 17 46 a6 65 d2 8b 15 49 28 ee 38'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'35 05 22 be f9 89 27 a0 b1 4f 84 a8 dd 2e 75 98'), textout=CWbytearray(b'7a 15 d9 f7 79 e4 da 3d 7a 65 c9 fc 25 69 56 b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'b0 e4 cf 97 8e 42 15 48 69 a2 16 c0 26 17 3f 93'), textout=CWbytearray(b'fa 30 0e 8d c6 c8 3b c1 76 99 7f 81 a0 a3 ce 2d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'0b 48 3d 95 11 7a 11 ef ed 6a 76 b3 86 c7 f6 18'), textout=CWbytearray(b'2a 26 b3 72 43 cc 82 e0 86 8c 95 1e 91 2e 3d 3d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'9b b3 af bc 71 e6 8e f3 ff 9a 59 82 26 69 6e d4'), textout=CWbytearray(b'20 64 e2 9c 82 fb 41 0e 46 27 b0 13 7b 56 94 de'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.06640625, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'81 f5 99 69 69 df c1 bf c2 84 d1 ce 37 22 65 b1'), textout=CWbytearray(b'23 cd b0 f3 9f 92 a1 08 14 49 3f af 1e 8f 12 4c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'58 75 c1 42 8d 7f fe 19 46 25 a6 41 7d c4 61 de'), textout=CWbytearray(b'45 ab fb 09 74 0a 95 9e 18 c8 1d 65 ac a2 cd ef'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.16796875,  0.01953125]), textin=CWbytearray(b'ab 4d a4 96 5c 16 13 13 59 d0 35 e5 20 f0 1b 89'), textout=CWbytearray(b'd5 34 1b 2e 97 50 74 b3 4f 08 de 90 3d b3 e5 e4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'5b 8a e8 6b 16 90 49 90 41 a1 0b 29 78 bc 95 07'), textout=CWbytearray(b'11 ed 75 ab c6 72 79 95 6d 74 8d 2c 92 d1 81 c5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.0859375 , ...,  0.01171875,
           -0.16796875,  0.03125   ]), textin=CWbytearray(b'b2 13 53 6b 29 7d f0 88 74 9f 19 b4 f0 f7 4f 53'), textout=CWbytearray(b'69 02 7f 9c 0d f2 f4 2b 5d a7 21 49 02 c8 d4 78'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'93 1c 43 1a af bc 6f c7 c2 14 2a d5 49 d1 12 2b'), textout=CWbytearray(b'1c f2 19 9f c4 89 8a 44 16 01 58 3f f8 08 c9 02'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.11328125, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'06 d5 11 bc 84 c6 16 d8 8a cc c4 95 dc f0 7f 79'), textout=CWbytearray(b'37 c0 29 74 d8 a4 75 43 57 d2 27 89 6c 06 30 76'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.08203125, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'c6 f9 b4 9e 27 ee 8f 56 b2 f8 22 ee 4d 97 fe 45'), textout=CWbytearray(b'ab 90 fb a6 a4 79 ad 01 2c 35 90 aa a5 7e 55 5b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'd1 30 10 9a 4f 75 fa 55 58 16 af 49 2d 41 2b d3'), textout=CWbytearray(b'6c ad ef 7f 86 ba 70 fd fe 8a aa 6d 05 52 88 a9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'14 a2 57 b9 c4 c9 f6 44 08 bf 7d 1a 1b a1 a8 2a'), textout=CWbytearray(b'42 c1 c2 be c2 d6 fe d4 90 a6 8b 35 82 be 86 93'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'19 c7 4a 80 94 f4 17 59 82 2d 00 b7 3c a5 25 59'), textout=CWbytearray(b'b4 19 1c ce 63 8c 25 d3 96 34 00 c3 b3 13 58 a7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.015625  ,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'ce d1 1c 32 f3 53 7b ed b9 15 e6 04 f7 df 2b f9'), textout=CWbytearray(b'93 71 ba 19 77 72 80 d0 7a c0 0c 77 66 5d 82 f4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.078125  , ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'ec 9c 95 f5 ad 93 0c 74 1a 06 d0 0e 7e 89 7b 97'), textout=CWbytearray(b'36 c5 a2 33 fa 32 ff 02 16 ae c0 02 67 c1 fd 40'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'2e 50 87 36 06 59 eb bd 55 7b 45 a3 0a 10 48 99'), textout=CWbytearray(b'0e 47 9e 09 fd 36 7b 9e 3a ca ca 90 bf 51 06 1f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.01953125]), textin=CWbytearray(b'94 89 e7 7b 92 e0 d4 f4 cd aa 7d 9d b6 d6 f8 ea'), textout=CWbytearray(b'6f 66 b8 c5 9b 41 02 0d 77 fc 16 24 d9 2b ab a1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.0703125 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'9d c5 22 40 d9 f0 9f 6e 15 c8 ac 50 d3 40 04 9b'), textout=CWbytearray(b'b3 29 a4 67 22 d0 eb c4 88 e2 71 8d b8 5e 20 2e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'05 f4 b9 1a ca 72 42 66 cf ce 73 75 e9 67 56 fc'), textout=CWbytearray(b'5f ec bf 53 3c 2c 59 0f 1e 2f 03 0e 18 44 0c 6f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'51 5f b0 c2 f1 d0 2b 30 99 90 e1 4b c0 93 21 c9'), textout=CWbytearray(b'96 28 b1 f9 e4 45 52 44 13 e5 c6 51 e3 33 b3 2f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'8b 6b 8d 7f f2 c3 57 6d 27 2e 43 17 ac 03 62 75'), textout=CWbytearray(b'a8 e9 5b f9 76 a5 15 0a 38 c2 fa 82 d9 9a 71 84'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'fc 95 19 33 53 73 84 78 9a 02 8f 04 8e 83 69 46'), textout=CWbytearray(b'ca a5 b5 ee 07 3c 53 43 e3 ef 9f 0d 82 42 94 67'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'26 3b 67 29 7f 0e fc ad 0d ae 95 ea 0f 39 62 35'), textout=CWbytearray(b'76 4c ba 84 27 2f fe 09 ca 91 08 8a af ba 91 bd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.01953125]), textin=CWbytearray(b'8e 9f e6 b6 d9 a4 83 64 27 36 25 b9 b4 8e 51 af'), textout=CWbytearray(b'0e a3 11 ed 61 55 98 50 84 5e 5c 20 49 41 03 9a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'b5 26 63 aa b3 c8 56 1b 8d 82 56 cd d9 7b ef a3'), textout=CWbytearray(b'3c 7f 79 ce fb fa ff 86 36 35 40 25 de 3f fa 73'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'e2 5c 7f 6f d0 23 24 65 6e a5 2c 48 11 d2 84 55'), textout=CWbytearray(b'ee be f0 c6 18 14 3d e6 37 08 af a0 b5 fb 9a d7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'66 a1 04 c9 f2 a8 a1 61 99 64 94 83 b7 f8 22 6c'), textout=CWbytearray(b'6f 13 82 7f e0 e0 4d b1 c9 91 c2 3a d4 9e 89 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.1171875 , -0.08984375, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'af f3 e6 54 b6 16 4c 33 10 12 db ff ed 4f 37 86'), textout=CWbytearray(b'77 56 5f 08 c2 19 b9 5c fa 67 69 c0 c2 32 41 ec'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'e4 4b 20 15 41 29 b8 02 a3 81 5d 7c dd 9b d5 0b'), textout=CWbytearray(b'1c f3 16 51 93 13 e9 61 f6 82 97 79 13 a2 8d 7b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'c0 82 6b 2c d4 b5 17 4d 03 1e 44 53 16 c0 78 6d'), textout=CWbytearray(b'c6 a1 c6 f5 4d 32 d0 a2 ec 85 66 31 00 48 75 19'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'ab 63 e4 15 5c a4 43 63 69 d6 f8 58 f2 2b 22 56'), textout=CWbytearray(b'79 f1 e8 f4 3a 96 61 35 62 ba c3 9e 9f a6 b8 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.02734375,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'04 4c d5 c9 31 6c a1 85 fb a8 3c e3 e3 a1 21 ee'), textout=CWbytearray(b'60 8f 15 01 4e 7c 13 75 d1 22 e3 c4 cd 47 75 ac'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'91 58 d4 35 01 18 16 8f d1 52 db ae 7b 99 f0 7c'), textout=CWbytearray(b'37 78 6b 9c 8c e4 9a a1 4f 7e f5 f0 32 c3 30 e4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'9e dc 9b 6d 7c 20 a3 2d 6e af b4 ce 63 59 bb 84'), textout=CWbytearray(b'a8 65 ee 99 55 ff b5 59 e5 e9 63 de 99 9c 92 54'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'01 73 9e 6c 72 dd aa 16 36 20 b7 b4 96 0c 03 77'), textout=CWbytearray(b'bb c5 72 9f 5f 05 89 97 74 d6 2f 5e 4b 3c bf 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'b6 74 0e 91 c5 a2 46 ad 13 51 ae 1c 20 4b 32 fd'), textout=CWbytearray(b'd5 37 3f 31 65 12 86 90 04 da c9 a7 1e 62 ce 56'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1328125 , -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'5a de cc 8e e8 c5 4d e9 f1 7f 5f 17 04 c4 3f 5e'), textout=CWbytearray(b'29 a9 7e c7 7c 27 a8 a2 06 75 b6 46 f0 f5 71 24'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'5e 7d 60 97 70 59 13 cd d6 96 3a f2 58 cf b4 22'), textout=CWbytearray(b'c3 bd 6e aa 4b 36 6a 8f 0e 5b 6a 07 b4 ce 7c cf'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08984375, ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'68 e7 bc 1e 60 af b1 d4 78 6e bc 67 46 f2 5a f7'), textout=CWbytearray(b'1c c7 a1 80 4c 9d 25 b2 e2 b1 3a 5b eb 4f bb 84'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.03125   ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'f8 d0 72 3f a4 4e ff 6f 87 42 a7 47 7c 97 69 00'), textout=CWbytearray(b'2a 7f 65 58 5e 8b 27 a3 3e 7f 0e e1 ae 0a 21 e3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'9e 38 b9 13 82 a4 50 c4 33 52 e4 33 c2 20 39 94'), textout=CWbytearray(b'0c 42 57 36 34 df a6 75 c8 19 b1 c5 27 bc 3d 42'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'1f 8c 8b 39 65 46 d8 34 65 d6 ae 5d 2b 0a 06 cd'), textout=CWbytearray(b'41 90 80 96 6b ab f1 85 74 18 8f 01 74 a8 71 c8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.07421875, ...,  0.02734375,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'e9 5f 1a 71 28 26 bc 7c 82 07 9e 70 90 e8 63 29'), textout=CWbytearray(b'c1 cb 70 51 55 95 d3 d2 78 1e 31 e5 4f c7 a5 cb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'23 76 05 4b e8 6e 08 3b 17 83 61 f5 d0 51 ed 27'), textout=CWbytearray(b'db 69 fc 1c 15 c4 aa 67 8f 6f c6 fb 88 b5 f7 e7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'0c 34 28 63 76 62 e7 1a fb cc ca ff ea 20 9a fc'), textout=CWbytearray(b'e5 aa 4b 03 4d 38 12 4a 39 92 ea e0 c2 56 96 76'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'50 1b 39 19 9f 6a 22 be 62 8e 93 b7 2c af ec 06'), textout=CWbytearray(b'a7 41 b9 9d 12 8d c2 e5 e6 27 f5 82 64 90 ef 49'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.16796875,  0.03515625]), textin=CWbytearray(b'ab 87 fc ff 78 c8 63 3f 97 90 62 8d 32 00 90 4e'), textout=CWbytearray(b'1c 59 c8 ad d2 68 e0 dd 1f 3c 5d 8c e2 f2 8e e5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'8f 95 6a 5b 3b 4f f5 d1 a3 0e bd f3 a9 3a 0d e8'), textout=CWbytearray(b'c9 f5 34 75 34 fe ba 9e 94 61 a8 84 d3 dc 6c 65'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'26 7b e8 6f b7 92 17 5d 17 93 e6 d7 11 ac 7b b9'), textout=CWbytearray(b'ed 9a 4d 85 db 7a 7c e4 cd d5 30 f0 37 3d 75 5e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'5e 61 2c df 13 08 d8 a5 0d 53 ba 8f e8 6a 5c 56'), textout=CWbytearray(b'ce e7 55 83 fc f4 59 da b6 36 76 62 26 dd 4a a7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'dd 78 fe b1 a5 c5 c1 cb 65 5b 9a de 5a 73 2a a4'), textout=CWbytearray(b'88 1f db 55 3a 93 e8 39 34 fd e6 0b 01 2f 1b db'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'e3 35 ed f3 39 a2 03 43 72 1f 96 a5 44 75 c6 b7'), textout=CWbytearray(b'4b 99 0e 17 4a 67 a6 00 0c f3 8b 80 ff 5e 76 31'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'bf 87 05 84 5d c6 4e 70 cd 99 b4 5f 74 b0 97 ef'), textout=CWbytearray(b'8e 70 32 e6 cf f2 ac 18 3d 0b cc 33 95 28 9e 65'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.01953125]), textin=CWbytearray(b'60 bc 6b ba 9a 4b d1 b2 d4 42 1d dc a4 6d 6b 36'), textout=CWbytearray(b'1b 08 70 6a 3c 7d 25 8f 87 c4 ff 31 7b b2 11 db'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'e9 bc 7b 93 ef 7e df f2 58 37 fd bd fa 83 ec 53'), textout=CWbytearray(b'c4 54 41 17 08 eb 66 51 dd 5f 26 8e d2 4c c9 46'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'bb 95 d1 bb c0 f9 7a 25 a4 75 1b ba 60 73 34 22'), textout=CWbytearray(b'fd 1d 41 4d 48 3b af 55 7d 89 bc 60 6c 1f 4c c9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'af d3 dc b0 f0 45 e1 3f fd 9b 88 59 34 ab dd 3c'), textout=CWbytearray(b'7a 1c 94 8a 6a a2 7b 4a b2 96 c1 1f b0 e2 b8 32'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'ff ff 69 13 b3 30 4f d0 85 e3 d0 bc ed c3 6b dd'), textout=CWbytearray(b'7d be 43 5f f1 b8 1a 1f 59 3d 90 4e 6d 62 d3 4e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.125     , -0.08203125, ...,  0.03125   ,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'ae d0 ca 7d c6 b0 f0 42 df 5f 2d 06 50 fd fa 01'), textout=CWbytearray(b'5f 15 7c 16 12 b0 23 51 f7 16 b0 8f 66 dd 65 6b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'8b ed 53 f9 46 62 31 b1 74 79 f5 1b fa ca e7 b1'), textout=CWbytearray(b'b0 4a 2d 14 97 51 32 c4 99 72 ef 88 ac 1e 57 ab'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'07 1e 21 69 19 22 46 79 68 46 a5 11 a4 ca 33 cf'), textout=CWbytearray(b'8a 0f 63 ee be a9 7d d4 90 8a a3 9e 5a 36 40 6b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'7b da ee 8a 29 d3 16 2d a9 48 15 7f 3b ef 3c b4'), textout=CWbytearray(b'31 82 cd 26 83 3d 74 0b 13 b0 a5 2a 8d 66 15 52'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'0c 5e 92 47 6d 76 bc 7b df 50 98 09 63 06 1e 20'), textout=CWbytearray(b'46 e6 8a 1c df d7 dd 79 c6 91 39 85 13 86 28 c8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.08984375, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'83 15 c3 e0 4c 44 f7 91 b3 70 ef 0f 51 bf 1f b0'), textout=CWbytearray(b'65 11 4b ed 4d 47 e1 95 4d 0a be 53 0a 37 42 d2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'd8 3c bb 8e f4 12 31 63 58 8c 5b f7 6b 48 9f cd'), textout=CWbytearray(b'f7 8c 17 9f 1d f6 78 c9 e3 26 aa 68 55 6f 27 1b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'35 7f 10 59 ec ff ab 6a 62 35 45 7a 83 43 d6 83'), textout=CWbytearray(b'a4 33 93 d1 e9 8c 55 d5 ba da 52 6e 1d 9a ea 69'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.07421875, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'89 88 54 53 14 ee d5 be 7b 99 3f 62 11 f8 3b 0d'), textout=CWbytearray(b'58 cf 20 8b 31 4b 00 ac 59 3e a6 53 d0 b1 82 93'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'c1 04 f5 40 c9 91 d6 43 c8 05 5b de cc c8 96 a9'), textout=CWbytearray(b'c3 4f 33 7d af 85 67 f3 4d f2 e5 1f 22 4d 7a 3d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.078125  , ...,  0.01171875,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'1d bf 9e 1a c1 74 5e 5d 0f 87 da c4 86 47 65 bc'), textout=CWbytearray(b'bd 4f 27 fc 3d 22 29 e5 8e 1a 56 78 8a 32 8d 6c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'c1 11 26 0b e0 ea 20 af 91 b6 46 5f 4d 31 73 b9'), textout=CWbytearray(b'3e 64 bd c5 f5 fa 43 d4 a8 69 97 be 6a d1 8d f6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.1640625 ,  0.01953125]), textin=CWbytearray(b'0f 87 4a 29 34 94 4c 07 a2 1f e5 d2 f8 bf be 69'), textout=CWbytearray(b'dc c6 10 7c 65 a7 01 69 32 f0 ae 31 95 e6 00 aa'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'8a 92 40 5c 41 ee a8 b7 46 b2 d6 d7 a0 01 a4 f6'), textout=CWbytearray(b'46 5c c1 ed 33 60 8b 65 1c 8a fe 8d f9 a9 14 66'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'08 13 b6 77 fc be 40 a7 4c d0 6f b4 91 ee fe da'), textout=CWbytearray(b'1c 10 75 03 75 4f 67 01 82 bd 98 f7 20 17 0f fc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.078125  , ...,  0.01953125,
           -0.14453125,  0.0390625 ]), textin=CWbytearray(b'57 59 90 9f 1d 8b f4 09 96 20 41 5f 0f 9a 5b 73'), textout=CWbytearray(b'61 00 d3 db 8f 8d c7 a3 e5 08 35 d4 8f 55 f0 b2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.078125  , ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'30 a2 8a 8f 51 07 c4 fa 26 b3 18 af 65 18 a1 5d'), textout=CWbytearray(b'44 ba 72 a2 2d c1 20 cf 33 00 da 76 d7 55 aa 1e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1328125 , -0.078125  , ...,  0.01171875,
           -0.1640625 ,  0.02734375]), textin=CWbytearray(b'ae 4d 86 f0 44 8d 3e 3b 14 97 8f 81 4b a1 f6 1c'), textout=CWbytearray(b'0a bb e4 10 d8 95 fa b4 5b 9d 59 ad 3e 94 e6 cd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'f8 8a 04 94 2b 58 12 49 4e 67 27 1f 84 bd d8 1b'), textout=CWbytearray(b'8c 82 af 4a af 0c 03 35 ae a9 43 c0 3c e9 f1 9c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'cf c9 57 6d 9e 02 ae 22 a9 4e e0 9e 4b ce ee 95'), textout=CWbytearray(b'e3 85 a9 8c 17 98 81 4c a7 f4 c8 f3 ab c6 8a a1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'76 6d ca ee f4 bf 61 a7 3c f2 c7 22 4a 65 89 c0'), textout=CWbytearray(b'c7 6f ae bd f9 72 26 8b 0a 30 51 6b 09 59 80 fc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'8c f2 e4 64 2b ce c8 bd 9a c0 63 45 7a be 7c 41'), textout=CWbytearray(b'ad 0a 37 56 a8 d0 20 fe 28 75 03 0e f4 09 a1 2a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.11328125, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'6b db 26 8b 04 5b ca 95 4e 11 30 9d a1 35 a0 84'), textout=CWbytearray(b'84 0e b3 7d 01 db 62 a2 94 0f 8f c7 53 e7 f5 b7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'22 ad b1 ca b7 1d 09 36 3e d6 87 38 21 dc a5 f1'), textout=CWbytearray(b'3c 25 6e a1 89 54 16 2e 2d 49 2a 41 7f a4 24 af'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'0c 4e 34 de c1 51 59 14 e6 c8 fc 1d 76 b3 99 7d'), textout=CWbytearray(b'ce 31 e3 71 8d 84 a2 26 28 60 5e 48 db ba 26 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'27 2a 51 69 2a aa ab d5 97 fb b0 32 1a bd 5d d7'), textout=CWbytearray(b'd5 5e d9 89 13 17 b2 0a 37 8e 7d a4 3b 3d 08 b2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'60 f9 e7 72 54 18 72 ed e9 b2 5f b0 c5 c4 3b 8b'), textout=CWbytearray(b'32 e2 79 df e4 c0 b8 ec e4 50 07 7d 8b 05 5c 25'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'95 e7 75 c1 6a 1f ec 95 82 d8 5f 31 ed eb 3f 6b'), textout=CWbytearray(b'e2 b1 a9 24 56 ae de ca 0d 29 43 66 a8 e7 fc ca'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'b0 fb 1a e7 16 be e9 4a be c1 29 51 2e ba dd 79'), textout=CWbytearray(b'7d f5 cd 6e 0b 69 ee ca e5 3d 35 66 d9 d0 42 19'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'00 60 f1 43 f4 bc b4 d6 28 ee 7a a1 51 05 c4 ee'), textout=CWbytearray(b'46 a5 15 75 f2 35 8f c5 55 06 f0 88 87 1a 91 b4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.078125  , ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'f2 c3 ad a4 fc 98 57 b2 b4 9e 9f 7d c7 cf 1c a2'), textout=CWbytearray(b'77 e0 3b e3 7f 99 30 50 2b df 20 db 61 01 10 0b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'94 9f bb e2 40 f8 14 97 36 70 10 17 3d c2 7c 80'), textout=CWbytearray(b'01 14 20 ce 33 3b 05 d1 a1 99 15 12 ca 3f a5 79'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'80 6d 0c bb b5 3b 18 79 72 81 cd af 63 59 25 25'), textout=CWbytearray(b'1f 56 40 21 2f 7d 43 80 1b 79 6f 0e 56 73 dd b7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.08203125, ...,  0.015625  ,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'e0 52 03 6d 9a 95 22 ba 1d 1b 2f 6e 82 67 6d 91'), textout=CWbytearray(b'5f 57 da 03 4e 20 ea d4 fb a8 db a3 56 e2 70 fc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'6e 87 7f 4c d7 4a 25 72 95 6d 28 88 a3 78 d9 ac'), textout=CWbytearray(b'98 b5 64 90 bb db e9 5b ed 5c 7d d9 ad 11 4f f0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.1328125 , -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b1 02 fe 49 d2 7c 89 d7 88 e9 0c 07 ca da ea f3'), textout=CWbytearray(b'57 2d f6 08 0d 8d c9 5d fd fa 82 a8 db 1d 0e c6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'69 dc ff ad 61 f6 23 01 c9 e6 cc 7e 0f ec 7f 92'), textout=CWbytearray(b'a3 99 5f f8 d6 b2 3d 52 86 fd d3 c0 9a dc f4 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'3f a2 c9 6a 38 ec a1 e9 03 4d 2b 8b 45 5b e7 00'), textout=CWbytearray(b'72 be 3b 18 66 07 d3 03 97 2d 12 1d 21 d1 3f bf'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'dd 91 af 5f 48 cc 26 d3 5f a6 e4 f7 5a 3e 25 11'), textout=CWbytearray(b'c9 61 9d 79 a9 0f 4b fa 37 a7 fd 1e f2 ea 8f 5f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'd6 85 02 0c b5 e3 47 59 f3 36 1d 36 8d 45 fb 0c'), textout=CWbytearray(b'03 1f 8d 4d e9 bc 5b 1f 7e 07 94 b4 46 21 ca 90'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'66 d6 ab 5c 1d a4 bb 90 57 62 69 40 7b 7c d9 ff'), textout=CWbytearray(b'64 a9 21 4b f3 3d 61 37 99 5d 02 00 20 2b 0d b3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'6d ce 4c 29 e9 34 4f 27 68 49 92 95 fa ca a6 9a'), textout=CWbytearray(b'b7 bc e3 04 de a8 07 eb 51 64 75 a9 8b f0 ed 7d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.16015625,  0.01953125]), textin=CWbytearray(b'13 8f 7d 37 43 2d 77 f5 ff 60 84 1e b5 1b ea 3d'), textout=CWbytearray(b'21 67 7c 84 7c eb 7a 0e 18 f4 66 de 25 c9 a6 2e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'a6 26 4c e2 09 dc 6c 04 bc 2c 55 27 7d a3 6f 60'), textout=CWbytearray(b'26 6e c5 1a a9 6b 09 de bd 56 6a 2a 7c 74 32 2f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.07421875, ...,  0.01171875,
           -0.16015625,  0.01953125]), textin=CWbytearray(b'f2 83 ca ee a1 be 7e 01 7a ac ad 7f 88 8a 8c d3'), textout=CWbytearray(b'e3 96 04 a7 61 0f 10 ae 18 3d 6c 53 6c 22 c4 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'ef a3 97 db f8 fb c3 ea c2 4f ff ba b9 db ae 33'), textout=CWbytearray(b'59 01 ff dc 69 2d 83 df a4 bd 98 93 57 d6 ac a3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'9b 4b 16 83 07 71 83 c4 7e 99 7b f9 1b ac cf 41'), textout=CWbytearray(b'75 de 23 28 96 bb db 42 b2 90 0b d3 69 4c 14 1e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'52 55 82 3b b1 ad e7 22 a8 6f 4b ce 5a 52 d0 05'), textout=CWbytearray(b'be c5 11 b2 3f 31 28 e7 66 8e 71 19 92 19 5a ae'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'65 56 cf 91 d2 0c 8e 03 66 a8 52 9c 45 ce e3 75'), textout=CWbytearray(b'1a fa 08 d4 77 d5 19 41 38 f5 6f 1b b4 41 58 00'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'0d 74 55 0e 06 4a 0f 0d 37 44 b1 df c4 9a cd d1'), textout=CWbytearray(b'18 b9 bc db bf cb b3 db 00 1f 23 ef 8d 51 f9 9e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'76 b2 0c 6c 52 78 b9 d5 0d e4 6e f4 b5 3e 93 50'), textout=CWbytearray(b'6c 89 27 38 4c 1e 7e bf 16 33 33 21 5d ac ad c2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.1328125 , -0.07421875, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'6b 54 23 d1 ac 32 91 8f 06 95 cb e3 7a fd 77 05'), textout=CWbytearray(b'8f 66 69 cc 90 e5 ce b1 b8 b8 40 da 66 a4 c1 17'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'8f 4a 99 79 bb be 42 f9 dd 7c 37 1f 70 11 86 59'), textout=CWbytearray(b'a3 fe 85 c2 85 58 37 3f 23 4e 6d 64 af 23 68 d6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.11328125, -0.078125  , ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'59 1a 1f da 19 70 0a 1a ee 55 15 51 8c 8d a9 ca'), textout=CWbytearray(b'14 e4 31 35 93 e4 fd f0 19 7f 4b 3c 98 85 b9 c3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'5c d8 bc 1e b7 ee f2 37 c1 62 e3 15 10 97 15 3a'), textout=CWbytearray(b'1b 79 ae f3 51 32 92 23 00 f1 dd 9e e9 20 2d 1c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.1171875 , -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'87 95 88 27 7a 4c d9 f3 42 cc b0 6c 93 75 e2 ed'), textout=CWbytearray(b'b9 cc c3 25 90 ee 42 68 f4 4b cf 08 db 80 8c 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'25 df 0b 38 ba a4 e2 c3 35 c1 40 97 7d bc c8 67'), textout=CWbytearray(b'68 65 01 06 d6 53 e4 76 90 85 6a e5 b7 56 6f 1a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.11328125, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'5f 4e c1 15 06 03 9e 6f 8b e7 d4 7e f4 f9 6d 4c'), textout=CWbytearray(b'1b 12 89 90 be b0 67 4f 20 88 5f f8 a7 65 ed 48'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'f9 af aa ea f5 69 19 42 1f ca 0e 2d 84 9a 4d ec'), textout=CWbytearray(b'38 bd 51 48 d9 33 f0 27 f8 20 98 36 14 00 3a 83'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'47 b9 72 cb 07 7a 65 8c d4 ad a1 87 12 5b af dd'), textout=CWbytearray(b'7a 06 13 a8 6f 0e 59 4c 36 a1 2c ac 7e ea b8 07'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b0 90 2e dc ad 69 ef e7 6a fd 7e 7f 11 7e f2 c4'), textout=CWbytearray(b'd6 7e ea 8d 89 aa e8 ea d9 61 f7 39 49 b1 77 46'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08203125, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'fa 30 87 56 fb 03 45 e7 d0 40 fb 51 d3 c1 ea e6'), textout=CWbytearray(b'e6 ec 29 85 95 44 c9 c4 c3 f9 0f 5a 48 19 86 30'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'e5 2e 06 8c 49 58 ad 23 e6 ba 2d 2c 73 3c 1f 4b'), textout=CWbytearray(b'72 0a a7 07 6b 91 7a bc e5 1b fb c6 c5 51 2b d4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'e6 aa 33 a8 09 f8 42 d3 ec c4 2f c5 9a 1f 0b 94'), textout=CWbytearray(b'd1 76 a6 57 f7 06 46 fa c0 10 3d 92 cd 5e a9 fb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'9c 45 bf a0 d4 0e ef 24 b3 5b b4 c0 eb 19 7c 55'), textout=CWbytearray(b'9d 19 49 be 87 64 3b 7d e2 bc 36 08 8d 4b 9e 8b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.16015625,  0.0234375 ]), textin=CWbytearray(b'0e d2 a4 f4 38 5c 8e 79 de 7e 2f ef 8c b7 1d fc'), textout=CWbytearray(b'e5 51 d8 63 b0 5c bc 76 14 51 30 73 12 53 26 26'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.015625  ,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'96 e0 c2 23 78 ca fb 96 80 1a 10 81 be a4 d4 0e'), textout=CWbytearray(b'56 fe 4c 74 36 2d 99 83 f6 95 6b 42 7f 75 ac 6e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'b7 4e d4 e7 99 5f c1 9b 50 7e d4 c6 42 e0 6f b2'), textout=CWbytearray(b'06 b6 63 99 1f 8a 7a e8 1a 53 da c1 70 44 8b c9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1328125 , -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'5c 44 89 3e da 3d 73 d8 7b 90 47 e8 a1 f6 21 54'), textout=CWbytearray(b'9a ac 17 ab 37 a6 5f 0a 2c 4e 87 db d3 17 23 aa'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'2c 81 4c b3 22 14 df 45 07 b1 d0 0c a8 a4 43 dc'), textout=CWbytearray(b'e2 4a 9e ed 93 34 ef c7 27 23 bd 27 01 f9 e8 ed'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08984375, ...,  0.0234375 ,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'd6 12 5a 2a 7f 90 dc 55 3f 9c d9 c6 9c ba a8 86'), textout=CWbytearray(b'08 40 2a b3 c2 6a 9d 76 12 65 d7 c6 a9 14 37 31'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.05078125]), textin=CWbytearray(b'c5 71 61 7f 1f 6a 6a e8 05 c9 69 86 b2 6a c1 57'), textout=CWbytearray(b'82 1c 5a 2d b3 97 ec df 20 c0 b7 0b 37 b0 fa d1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.0859375 , ...,  0.0234375 ,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'b1 de 4c a5 5e b9 22 a9 a3 ec 8d 67 e4 d4 dd 6f'), textout=CWbytearray(b'22 77 c1 e0 d9 4c 55 c7 32 bf a9 a9 65 35 08 db'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b6 ee d2 41 59 90 a4 3f 6a ce 88 89 c3 67 56 2a'), textout=CWbytearray(b'c4 54 19 fd 69 e2 cf 1d 24 b2 ad 8e 05 37 e1 3b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'91 3f ea 11 b2 a1 1e f9 8c bc 62 3f e4 d1 07 13'), textout=CWbytearray(b'e1 4b ff 41 9d 1b 9a aa 55 0e 25 9b d9 67 27 f4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'91 05 52 82 da 99 fc 53 1d f3 1a c1 b2 e9 25 04'), textout=CWbytearray(b'83 d0 1f 2a fb 2b a1 bd 24 d7 de c2 cf 8d c8 96'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'3d 10 37 bf 5b 82 38 39 04 83 df e5 31 3d 4c ea'), textout=CWbytearray(b'f9 4a 13 7a 78 de 1a 46 4b e9 39 98 18 7d 3b f6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'2d 7c 3d 2d 20 43 c4 a0 5a 8f 95 4f da b2 3a c5'), textout=CWbytearray(b'1f 6a 47 56 77 a2 17 36 ef 85 ad 58 50 71 92 16'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'b3 1c 50 4d de b7 f2 e6 a8 df 2a c1 e4 82 ce be'), textout=CWbytearray(b'be de 18 f6 f3 d7 e2 b4 25 84 f8 a9 aa 9e b0 01'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'ff ab a8 6f 65 9e a8 b1 12 22 99 ed f5 aa 02 32'), textout=CWbytearray(b'20 04 86 f6 0f 03 1d a1 db b8 cb f3 c2 40 49 8c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'eb cc fd 0e cd 27 95 ce ce fb 7f 81 3b 8f c0 6c'), textout=CWbytearray(b'f3 28 a3 81 f6 61 de 57 d0 33 74 e0 c1 d1 15 35'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'b2 fa 85 4f 68 d9 7c f2 1d d2 dc f6 9e b0 85 2f'), textout=CWbytearray(b'e1 34 25 d5 ac 36 c8 08 69 c1 bd 1b c5 75 68 08'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.140625  , -0.07421875, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'94 fa 54 f6 b3 11 d4 cd 80 bb a1 98 45 cf 95 11'), textout=CWbytearray(b'21 98 31 a6 28 f4 28 98 4c 11 15 d2 65 2f f4 ac'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'e7 b3 8b 6b 29 1b 92 a0 4a 04 fe 96 46 56 47 d0'), textout=CWbytearray(b'c8 4a 71 9c cf 2a fe 0a 32 ca 8a 58 06 83 3e 9d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'ba 1d 75 ab 28 e8 96 53 db fb 89 d3 66 1c 57 23'), textout=CWbytearray(b'55 8e 88 7d 64 a3 d9 5e 8f 70 33 f1 45 43 49 90'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'f4 13 9f 1e 74 30 34 9e 84 15 6f d2 29 65 7b 5b'), textout=CWbytearray(b'35 d4 e8 6f 21 64 b1 70 5c bc d8 d4 5b bb 1d 2f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.02734375,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'ba 0c ea 03 cd 31 b4 17 95 60 41 35 e0 d0 91 1b'), textout=CWbytearray(b'bc 10 38 d8 51 45 cd e1 4d e0 eb 47 f9 45 92 e7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'ee 81 ba 04 0a 59 04 95 ee ad 97 17 75 b5 b5 be'), textout=CWbytearray(b'63 ae d0 36 75 9f b4 cc 10 9c 08 a6 96 20 c1 c1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12890625, -0.078125  , ...,  0.02734375,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'7e ea 95 91 00 e2 48 d1 d6 72 9a 1c 8b 63 71 13'), textout=CWbytearray(b'5b a9 2d 8b 28 2a ad 3e f7 8f 82 e3 90 8f 48 ba'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'4b c1 57 d0 25 da d0 0b 1a e3 57 6e 07 3c f6 d2'), textout=CWbytearray(b'd1 f0 d7 8e c2 3e 9d c3 67 9d 81 32 1b 32 d2 e7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'd5 9b 05 3e 6d cd 1e ae c6 c4 06 62 e1 67 bf 2f'), textout=CWbytearray(b'bc 42 94 03 32 4d 05 d0 49 d4 fc 66 a3 4c 7e cd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.11328125, -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'18 ee 4f 2f 18 68 a7 13 0d 67 f8 a1 de 96 1d d2'), textout=CWbytearray(b'61 2e f4 fe dd 44 33 c2 8d 87 2b 88 3d a8 74 02'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'da 22 bf 87 95 e1 b4 bd 94 71 e6 7c 76 11 ed 75'), textout=CWbytearray(b'55 21 30 5d 75 91 32 e8 af 75 bb 1f 98 ee c3 1e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15625   ,  0.0234375 ]), textin=CWbytearray(b'd7 a7 b7 11 0a 77 50 6c ba 0c 44 b6 b2 da 39 2d'), textout=CWbytearray(b'22 fd e8 0c 95 bf eb 7a 57 cd 88 b1 40 ee 55 48'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'2a a0 89 1d f5 65 c7 a6 bc df 15 44 cc 43 bf 16'), textout=CWbytearray(b'00 fc 4c 16 eb 67 bb eb 8e ab e3 d1 6d 10 40 e8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'88 43 51 26 ed a1 3c 6d 94 ac 19 f3 58 e8 dc 92'), textout=CWbytearray(b'81 73 7b 13 73 9b f8 50 38 56 3b 10 e8 64 9e 9b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'df 38 c7 bb f3 9f 0b 1a d8 d5 d0 aa b5 b7 36 da'), textout=CWbytearray(b'07 97 95 71 1d 92 1a 5c 2a d8 8f 7b 13 f3 3e b8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'e6 a2 9c 2f 69 78 11 24 11 db ef cf ca a1 f8 e7'), textout=CWbytearray(b'53 5c 1a a6 a5 31 cd 8c c2 bb 0e 47 b2 41 f2 2d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'b5 d6 25 6f 9c 74 bd 5b 2d 68 e5 81 d0 ab 83 78'), textout=CWbytearray(b'f2 5d a3 5f 36 c0 58 ca 72 2b 4c f4 1d aa 55 00'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'99 42 a6 fb 99 c1 6c 07 25 31 56 31 04 b4 98 17'), textout=CWbytearray(b'b7 20 98 81 33 0c 4c cf 49 c8 33 ee bf 97 d5 af'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'fc 16 00 fe 17 2e c6 b3 8b 26 58 0d 0a 9e 05 63'), textout=CWbytearray(b'61 19 5f 38 56 b3 22 d8 5f 1d 1a 92 16 eb 72 4e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.11328125, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'4a 55 38 86 8d 0b 9f 76 ce a0 5b f7 77 3c c5 d0'), textout=CWbytearray(b'f6 bd ad 56 ec 24 e6 f8 c7 29 24 5f 35 86 23 d4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'ea 2d 4b 0b bf 2d 07 d6 23 20 36 f6 b5 14 17 6f'), textout=CWbytearray(b'6b 0a c0 9b b8 f0 9e fa 1d 90 38 56 9a 27 1a 36'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'9f 6e 25 e7 86 3f 11 02 8a d6 20 a7 82 9c 67 bb'), textout=CWbytearray(b'5e 88 0c 8e 0b 77 73 f4 5f 28 35 11 33 fa b7 a5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'b3 8c 07 3a 35 b5 6d d2 35 a9 2b e3 f7 21 ca 0b'), textout=CWbytearray(b'1d 2b 67 14 0f 65 18 48 8d d7 0f 39 11 df 64 0e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'4b df 6e 1c 07 16 a6 4e 30 1b 87 2c 76 b0 69 1d'), textout=CWbytearray(b'c8 a9 b9 56 e5 db f0 42 39 67 5d 7c 82 23 fa 7a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.03125   ,
           -0.14453125,  0.0390625 ]), textin=CWbytearray(b'8e eb cb b0 4d 6a 47 57 9e 4b 30 53 d7 e0 c2 7c'), textout=CWbytearray(b'87 ce 74 18 db fb 74 16 65 a1 a0 49 79 7d 94 4f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.1171875 , -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.0234375 ]), textin=CWbytearray(b'5a fa 71 1a 02 59 08 1c 3f 7d 25 c8 80 38 d8 7e'), textout=CWbytearray(b'3c fb 72 87 1b 9e 3a 11 fd 6e 2b 81 ee de ac 1a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.08203125, ...,  0.015625  ,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'9b 6f 6d 27 0c 66 16 5f ef e8 c7 c6 45 7d 78 cd'), textout=CWbytearray(b'6c 8b 85 f3 1c 75 ce 4b 82 c3 39 f2 ac 2f ae 57'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'69 62 5c 17 6b 56 b5 63 35 de b2 a3 65 b1 d4 b9'), textout=CWbytearray(b'11 18 8e 31 cc 94 56 58 fc e8 e1 5f 33 8c 9c cd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.03125   ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'7a 1d f1 71 d9 9c 5a ea c5 f7 0b c3 0d 71 35 d9'), textout=CWbytearray(b'e5 c4 80 b1 70 f0 97 6f db 02 d2 7d ab f3 35 8d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.07421875, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'9a 51 43 1c d3 d6 60 74 17 2b 57 8c 68 32 dc ac'), textout=CWbytearray(b'df d0 56 f9 fb 83 45 09 23 8c 09 0e d5 f1 59 19'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'dc fa 3b 9f 20 f0 04 fa 65 0b 48 1c 1c 20 0e 6f'), textout=CWbytearray(b'6c cb a8 95 85 eb 9a 42 c0 60 47 ed c1 59 97 54'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1328125 , -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.0234375 ]), textin=CWbytearray(b'fc e8 bb 3d 32 80 f7 8b 46 db d1 ec d1 b7 59 69'), textout=CWbytearray(b'28 d8 10 ae 07 1f 12 8f f0 0f 58 7d 97 8b d6 10'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'9b bd 17 cb f0 52 2d c3 7e e1 e3 a5 0c df 64 b3'), textout=CWbytearray(b'4b dd 75 72 da a1 ae be 72 f8 d7 f6 8c 29 71 bd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.01953125]), textin=CWbytearray(b'f0 19 01 87 67 c3 a9 79 7e 6e b5 c3 e4 4f d5 89'), textout=CWbytearray(b'f8 00 35 2e 58 b6 c6 e2 89 56 45 92 e5 0c e9 ed'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'80 51 b2 0f 46 7c b3 4e 67 cd 34 bd dd 90 2e 5b'), textout=CWbytearray(b'0f 33 b1 4e 01 3e b2 73 26 23 46 5e b1 08 8f e6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'1e 8b e4 80 08 e9 19 58 27 1e 6d 58 89 18 27 d3'), textout=CWbytearray(b'42 ea 0f d2 d9 78 da 46 83 3e bb cc be d7 0b 43'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'37 44 56 a3 13 dd d6 f5 ba 0c 2d 61 9b 82 fc af'), textout=CWbytearray(b'd7 4e f9 c0 54 01 87 d2 38 7c 51 d7 56 19 c7 bf'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'72 51 b7 e8 bb f6 c3 9d 05 ee 32 06 4f 4f 6a b6'), textout=CWbytearray(b'9e 83 e5 ec 82 89 bf 5b 4c ef 3e ad 2f 86 68 3c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.11328125, -0.07421875, ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'e5 ab 32 96 81 65 8f 6d 9c e5 84 b4 d8 ec a6 ab'), textout=CWbytearray(b'c6 2a 96 56 73 77 28 16 82 0d 81 ae 9b 05 f0 be'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.02734375,
           -0.14453125,  0.02734375]), textin=CWbytearray(b'09 23 67 36 08 87 b3 59 54 4e 97 99 ea 2a af 87'), textout=CWbytearray(b'aa b5 1f 4d 12 f5 19 ab 2c a2 c7 a1 b7 fa 47 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'34 fe de 15 0c 30 12 b7 6e 60 94 27 5a 26 9e 01'), textout=CWbytearray(b'86 ff 02 2a 3b 5f 0b 81 fc a9 6b 8b 7f 29 66 b0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'51 6e 02 ca f6 ba 46 d7 b8 51 cd 25 1b 45 29 c5'), textout=CWbytearray(b'1d cb d8 0c 27 75 2f f8 e3 23 6d 3c e2 a3 08 9c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'c6 44 90 a4 06 50 b2 55 20 d4 6c 4e c8 c7 b8 e8'), textout=CWbytearray(b'4b 5e 82 e4 93 0d a6 e6 c2 ab 28 25 fa 87 21 17'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'60 73 50 86 a0 ae 3e fd 4e 9b 17 0c 01 a2 da 41'), textout=CWbytearray(b'7b c7 f9 e8 5c 71 a3 83 96 5c c8 01 27 57 34 db'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'80 9a af c9 99 57 d8 02 3a c1 71 fc 6f 91 53 4f'), textout=CWbytearray(b'78 37 0f b8 d6 c6 bf 7a 85 0b 1c 56 89 f9 65 16'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'21 e9 b8 36 e1 79 34 5c 8d 96 3d 4d 99 28 b5 33'), textout=CWbytearray(b'b9 6a c6 67 f8 2d ff fd 82 fe 86 1a ff c4 e0 6b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'3a e2 f3 a2 8d 82 dc bc fd 6a 7e 05 e1 fc 4a ce'), textout=CWbytearray(b'da cb 50 33 a1 4b da bf c5 79 78 0b a7 33 05 07'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'30 05 be ef 7f 80 e5 72 90 3e 27 93 9a de ee fd'), textout=CWbytearray(b'1c 7a 5e dd 78 77 10 cf 0f a3 b9 ed 95 59 b7 9e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'a9 4f 06 07 85 bf 68 f1 86 d2 5e ba c7 f1 1c 4e'), textout=CWbytearray(b'48 2f 58 6c aa d7 08 fe d2 0f 74 95 39 5f e0 4f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'dd e1 b0 87 cc cd bf c8 3d d6 da 25 bc 43 47 44'), textout=CWbytearray(b'31 f9 63 a9 ee bd 41 22 14 8f f2 7e 8d 25 3b 6f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'0f 74 4d f8 5b f9 1e 72 ad 61 76 59 b1 91 77 00'), textout=CWbytearray(b'2d 1c b8 b7 ac 5f 43 bd 86 94 f4 74 c2 1e 3a 8f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'bf 51 80 9f 1e 99 10 53 bf cb af 71 92 38 64 98'), textout=CWbytearray(b'4c 18 28 b0 61 d8 95 66 12 be 27 96 79 f3 40 60'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'f0 43 c7 6c 3f 50 dd 80 e8 83 15 05 5a a2 b4 d5'), textout=CWbytearray(b'c3 cf cc 91 7b 0a ef c3 3b 5e 72 d7 65 90 6d 8d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'6b 3d 8a 8f 4a be e3 ce ea 9f 2d a6 21 1e c2 7b'), textout=CWbytearray(b'1c 14 db aa f2 c6 e9 43 e7 66 cc 16 76 69 e2 c9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'd4 da 7a cb 5f 70 ea 48 bb 1c 76 22 f4 d0 cb ba'), textout=CWbytearray(b'6d ff 6c 2e 3f 6a 90 60 58 55 06 51 9a cc d9 4d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.06640625, ...,  0.02734375,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'e1 01 c1 85 c3 74 e4 f4 f7 ab 87 57 a5 d1 20 5a'), textout=CWbytearray(b'a9 99 61 94 4c a2 f8 b3 18 67 e7 27 fb a2 37 33'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'6e a2 de 75 05 7b f9 2c ba 77 39 bd 6e 0d 7a f0'), textout=CWbytearray(b'd7 9a 78 53 13 b4 3c e1 3f 41 64 7e e3 90 8c a1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.15234375,  0.12109375, -0.0703125 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'6e 9e 82 d5 2f 48 d3 5d 30 39 cf 47 78 5c f3 f8'), textout=CWbytearray(b'10 8e eb 59 c0 c6 47 2c 7b c7 e1 60 2d a7 54 2b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'73 88 a6 ef a4 18 65 76 4b 23 fe 86 3f f9 e3 01'), textout=CWbytearray(b'78 b3 5c d4 24 71 24 20 88 ae 6d 5d 3e 23 b7 4b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'8e dd eb b2 ae 0c b9 b3 d0 35 c3 ca f3 5e 80 67'), textout=CWbytearray(b'5b 90 bc c4 48 8b 51 a1 16 98 d5 5f 92 b9 75 17'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.07421875, ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'2d 05 7c 90 f3 3f fc 32 c9 f8 b3 dd af e8 89 fd'), textout=CWbytearray(b'62 86 59 ed 43 44 9c 71 22 1f f8 b3 e5 c4 96 24'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.03125   ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'29 dc c0 a2 b1 44 8b e1 a6 ba 59 24 71 e8 88 85'), textout=CWbytearray(b'e4 fa b8 89 ae ac b9 b1 be 13 97 a5 d8 be 70 22'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'c3 79 2b b2 93 a6 b3 f8 eb 71 89 7c 7d 01 dc 75'), textout=CWbytearray(b'ce 78 a3 9e a6 34 ac 68 d7 a9 96 2f 90 f3 63 bb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'de 49 c3 a6 96 dd a3 11 85 21 ff b0 99 61 3c bd'), textout=CWbytearray(b'5b 12 6c ed 96 cb 95 9f 09 27 f7 bf 6b aa f5 e0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'37 dd ef 09 5a a7 5c 39 c4 d6 97 91 64 85 b8 f3'), textout=CWbytearray(b'4a 94 5d f4 e8 b5 b3 85 e2 c9 09 05 f7 a2 3a 47'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.07421875, ...,  0.02734375,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'6d c3 c6 0c 09 d9 f0 aa 77 32 73 f8 86 92 b4 82'), textout=CWbytearray(b'de e3 77 a3 1f 09 51 66 37 d0 6d 82 c4 17 f9 4a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'26 d7 9c 27 ec 75 60 11 f0 ee c4 32 f4 55 e8 6b'), textout=CWbytearray(b'14 25 3e 72 9f 27 f4 03 39 fd 3a 73 c6 d9 95 bd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.03125   ,
           -0.14453125,  0.04296875]), textin=CWbytearray(b'a5 b7 3c 3e 38 de e3 0b b8 e5 1f 30 34 03 45 69'), textout=CWbytearray(b'f9 d3 fe 55 2e 14 94 67 fb 5b bd e0 6f ec 2c 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'80 d6 b0 28 d9 bd d8 b4 4d eb ca f3 25 ba 9f c7'), textout=CWbytearray(b'12 88 f0 60 7d c0 ba 0d 95 14 59 4c e5 ef 33 d6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.02734375,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'8f f1 77 e0 28 11 eb 5d da ad d0 a3 33 30 c5 8b'), textout=CWbytearray(b'b0 a2 5c cc c8 3f ca 05 8c bd d2 ac 3d 28 e7 0a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.14453125,  0.03125   ]), textin=CWbytearray(b'be ce 63 fc 92 b7 50 bd 73 ed 05 10 5e 01 cc f0'), textout=CWbytearray(b'66 c3 1c fa 8a 45 6f 8e 73 ad 3d 0f b7 73 23 44'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.078125  , ...,  0.0234375 ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'ca f7 5b 7a 7f 07 d0 83 91 fa 1f 86 e4 6a 44 42'), textout=CWbytearray(b'41 ed 55 21 aa 66 4f 63 48 6c d0 5f 3a 47 5c d9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.14453125,  0.0390625 ]), textin=CWbytearray(b'97 ab 97 00 33 09 2c 51 51 8f 49 ed 3b c3 fb 1e'), textout=CWbytearray(b'c2 1c 9d fa 82 54 f6 45 15 46 e8 7d 16 39 e2 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.15625   ,  0.0234375 ]), textin=CWbytearray(b'81 2b ba ce 7d 24 ba 83 56 21 a7 e7 f8 60 52 00'), textout=CWbytearray(b'e4 21 ad 37 2d dc 78 34 66 35 73 61 1b 0e 93 5e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'3c 7a b1 e0 ed 65 b2 a6 3c 23 89 8a 8c 25 9c 38'), textout=CWbytearray(b'5f 5a 76 b0 22 f1 c1 91 b1 e6 fd 1c 9d ec b0 8c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.15234375,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'e7 b4 bb 77 e1 27 e6 49 98 94 a4 8d c4 61 aa 00'), textout=CWbytearray(b'86 4f 48 6d 11 11 69 a7 d7 87 5a f1 79 26 15 74'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.11328125, -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'0e 22 7b ba 88 b5 12 66 1e c9 98 b7 16 dc 83 bd'), textout=CWbytearray(b'87 b7 11 8a 14 3b 5c 39 f7 40 08 db 14 57 d2 4e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'b7 e1 09 e0 b3 6b 26 e8 de e0 32 b3 d7 2e ed 0e'), textout=CWbytearray(b'b0 d3 a9 20 6e 3d d1 4e 8b 5c 1b 33 22 a1 af b3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.078125  , ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'48 0b 16 cf 07 8f ac 45 e5 1b 60 7d 45 65 e7 28'), textout=CWbytearray(b'6f 8a 75 e8 8b 82 e2 a0 00 be dd 6c 24 23 c3 6c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'86 04 18 cf 27 55 9a 69 71 dc eb 8f 2e aa 94 70'), textout=CWbytearray(b'1f 6e 4b 74 d8 fa 0f b4 ea d2 f4 ea c7 0f 8a e9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.140625  ,  0.03125   ]), textin=CWbytearray(b'89 62 01 72 6e 9c 7e 7a 80 2e 7b cf 7a 2b 85 12'), textout=CWbytearray(b'6a 1e d8 6a 88 9e 5c 16 87 6b ab 01 c4 33 c6 ef'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'8b f8 54 4d 0a a3 e3 8b b9 0c 6d 3c 25 3c a5 48'), textout=CWbytearray(b'd2 c5 e9 b5 7e 03 a6 ac 0d c4 d9 5c 05 a1 d7 4a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'21 e1 f0 97 9d 15 a7 b3 de 23 36 e6 a4 57 28 86'), textout=CWbytearray(b'bf e0 5b d4 38 56 e0 aa b6 c0 b8 59 3c de 5b 1c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'9f 98 c0 cb 78 d0 cc 46 09 08 62 14 f5 af db 16'), textout=CWbytearray(b'c4 6c 3b dc 4b 37 0c 3c df ee 5c 8c 40 fd dd 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'8a 38 fc 61 6a c0 aa 2a 06 5b f6 18 e3 4d 82 38'), textout=CWbytearray(b'b7 de 28 a0 83 4f 60 25 84 dc 2d bf 73 62 2a 58'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'0c ff a7 3a ea 34 c3 98 6f 77 66 90 f5 c1 6a 57'), textout=CWbytearray(b'19 e8 f1 ef 0d 67 86 66 57 9d 8e f1 00 6b 42 e5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'cb 2f 0b 96 6f 97 36 65 ea 6c 47 98 40 2c ab 5b'), textout=CWbytearray(b'dd a2 6e 51 e8 72 73 a3 59 c6 b8 d7 bf c8 a1 d0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'd2 7e 88 5f 60 dc 27 1a 43 fb b8 6c b4 37 5b bc'), textout=CWbytearray(b'f6 08 0e 88 f9 a2 4f 77 a9 33 20 27 eb 93 af 94'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'b2 4e 06 43 d7 a3 15 92 6b 94 9d 3a 0b 69 58 bd'), textout=CWbytearray(b'2c f2 a7 e7 99 9c 6b b4 d0 1c 34 5e 57 75 7b ad'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'5a 78 32 4e 51 28 51 a7 bf 37 a1 ab 99 31 a8 a5'), textout=CWbytearray(b'b8 e6 bd 95 30 41 83 0a 3d a4 a7 07 df 59 02 5d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'11 26 90 f7 a7 1f f1 0d ad bf 09 56 0d 6f b6 8e'), textout=CWbytearray(b'61 80 77 23 e7 7d 65 39 ab e9 8e e9 5b 07 c6 05'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'73 28 3d 9f c5 89 41 78 15 9b 07 c0 89 b8 32 82'), textout=CWbytearray(b'e2 82 70 83 30 38 1f e3 d2 b4 ee 74 53 8c e9 cb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'69 50 4c 44 04 87 9e b6 75 0d 5a 85 c0 e1 1f 2f'), textout=CWbytearray(b'51 21 6a 43 01 58 3b 09 83 f2 1d a3 b3 e8 30 07'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.0234375 ,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'16 7d c2 50 de d2 09 a9 77 17 f6 ca 29 98 5e 65'), textout=CWbytearray(b'78 7b ad 91 df ff 67 bc 84 c4 a1 57 a7 1f af 63'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'0d e3 79 ec ca 16 51 8b 2d 64 aa 5a b9 b6 34 d6'), textout=CWbytearray(b'43 23 0c d2 ce 97 5d 19 61 db 29 96 43 cf 17 15'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'6a 72 0b 02 18 41 cf 26 e1 f9 c5 fb ec 85 65 46'), textout=CWbytearray(b'4a 2a a1 fa 20 70 e4 74 f8 4e d3 34 02 14 58 09'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'11 5c 56 54 14 a9 95 a8 a3 37 6c 8d f4 dd fd 1b'), textout=CWbytearray(b'f4 8a ce 75 8a 19 b4 58 76 4f 4a de cd 0c f8 cf'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'35 0a a5 41 ba b9 ed de 58 db a9 7d 9b 8b 30 ce'), textout=CWbytearray(b'44 42 b6 f7 77 ca 07 bb 2d 17 14 cd a4 af ab a5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.14453125,  0.0390625 ]), textin=CWbytearray(b'ec 5b 55 aa 93 76 48 62 c4 42 c2 26 86 f8 b9 c7'), textout=CWbytearray(b'fb 2a f3 06 34 86 53 04 44 38 47 87 55 bd 45 0b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.078125  , ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'd8 ee 57 ee 35 8c a0 5b 90 04 fd e3 5a 51 3e f3'), textout=CWbytearray(b'19 f1 c4 00 4f f9 6c 30 8b 96 7f 40 56 15 af 3c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.0703125 , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'5b 9e 84 80 25 47 69 04 9d 31 e0 2e 28 a0 10 cd'), textout=CWbytearray(b'4d 59 39 6c 38 15 fb b6 b7 d0 ad ae c4 2b 13 0d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'6b c3 29 9d 38 70 97 fd f2 4f e0 69 19 c2 e1 cf'), textout=CWbytearray(b'b9 6f ce d8 07 f5 f2 32 12 1a 79 8d 50 11 cb d9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'e0 65 28 bb ed 1d ab 6e 24 04 5e 82 46 be 9f b4'), textout=CWbytearray(b'5e 06 69 41 92 f1 41 18 26 e9 31 69 48 98 da a4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08203125, ...,  0.015625  ,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'27 69 a9 36 33 f4 32 90 41 0a 2a b6 88 4d 1f 6c'), textout=CWbytearray(b'17 5b 91 a4 ef 34 b3 54 74 82 0f 9a 88 62 be 47'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'7d 5b 66 de 79 e0 a7 30 05 a9 6a b6 35 03 76 ea'), textout=CWbytearray(b'e9 29 84 f7 6c 69 3b 13 1d bf 4c a1 50 8d 74 78'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'be 19 1f 5f 0e 69 03 d2 5b f2 cb 45 2f 80 39 fb'), textout=CWbytearray(b'd6 36 5a 4a b7 f1 d6 5d 0a 73 3e 74 f2 db d4 86'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'd8 e1 91 db ea 5f b7 11 e5 8a f0 63 35 a0 a9 2b'), textout=CWbytearray(b'10 9a 23 9b be 2a 6f aa 7b d6 0c 08 8b 4a b3 6c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'd5 42 a7 6d ba cf b3 e4 3f 21 3b d1 66 d0 af c9'), textout=CWbytearray(b'c0 d1 71 e3 25 84 f2 88 2b 1e 13 80 ed f1 5a 52'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.1171875 , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'ee dd 6a ff cd cc 92 26 7d 6e e6 9c 47 04 63 ce'), textout=CWbytearray(b'81 83 9b ae 54 8d a0 32 bc ac ec 53 8a 46 53 32'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'30 f4 a5 2c 38 c9 95 4d da 7e 52 ed ca 9e 45 99'), textout=CWbytearray(b'83 46 61 43 90 eb 67 93 71 3b 3b 1f af 97 73 9a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.1484375 ,  0.04296875]), textin=CWbytearray(b'91 f6 98 b9 3e 5c 04 ab 35 e4 07 95 c3 62 30 91'), textout=CWbytearray(b'5d fe 48 f2 ea 76 7e c5 61 0b 1d 0c cb 98 91 94'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'c8 dd 23 bd 13 5d 7f 20 b1 3e 8c 7a a4 fb 75 de'), textout=CWbytearray(b'ed 38 90 f7 d7 38 63 ee a2 49 d3 d3 31 2a 60 bb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'ad 36 25 ee 94 57 fe b7 b5 60 90 30 84 7f 8a 11'), textout=CWbytearray(b'43 7a e2 57 48 a1 f5 cb f5 92 c9 21 2e ee 05 9b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'bf de 54 0e dc d4 f7 76 5d 7d 6a b0 98 70 d9 27'), textout=CWbytearray(b'34 be 7d 1e 28 55 fc c1 a6 ff 95 de cb 42 2b 1e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'6c c1 83 1a ca 41 9b 99 89 1e e8 0d b7 d2 f1 77'), textout=CWbytearray(b'40 8a aa e3 05 8c f8 8a 3f 1f 44 3e c9 56 c3 2e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'f2 97 af 84 cb 41 9b 53 1b 74 7a b1 47 17 68 05'), textout=CWbytearray(b'ee de 7d 8d b1 ab b9 96 12 08 fc 67 aa b0 fe 74'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'b8 39 09 59 3d ac 50 10 3c 44 09 74 04 9e 31 c0'), textout=CWbytearray(b'4b 2f 79 10 5c 4e a6 02 83 ee d3 fd 02 eb db 05'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.078125  , ...,  0.0234375 ,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'bb cc 62 f5 0f 16 f0 10 b5 a7 9b ea 91 43 dd 3b'), textout=CWbytearray(b'47 0a 7b 6e a9 32 d6 f4 a1 40 b0 32 9b 12 8c ee'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'13 1b 28 a9 14 c7 0a 68 31 db 14 fd 9f 1b d2 1d'), textout=CWbytearray(b'26 95 3d 04 56 4c 02 86 49 2a 0e f4 4b dc cb b2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'e4 83 cd a3 5e e1 fe d3 44 f0 8f 7b f7 9b e0 5e'), textout=CWbytearray(b'6b d0 35 63 06 6c 25 6c 1d e1 49 f9 a3 66 04 f6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'8e 23 e1 41 95 63 e8 7b fd 33 7d 3b 75 88 db fb'), textout=CWbytearray(b'a7 cc f7 6e 71 b4 72 ad eb 05 c2 86 b2 fd 54 fa'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'f9 3c d7 e5 60 bf ee 95 12 a5 fd 74 36 18 08 72'), textout=CWbytearray(b'17 f6 6d d0 ed 2c d3 87 93 8e 1a 77 22 ee 12 81'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'46 ab 42 a7 06 68 d5 1c a9 ba 49 4f e0 f0 82 85'), textout=CWbytearray(b'd3 e7 1a 87 d4 12 e6 7e f2 e2 a1 16 22 28 fe d3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.0859375 , ...,  0.015625  ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'8e c0 8a 5b 10 7f 26 04 ff d8 c1 6a f1 04 e8 fd'), textout=CWbytearray(b'62 7b fe 4c 72 20 06 eb 38 bc fd a2 9c cf 5b 3a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'74 d0 42 82 f8 c3 12 88 83 27 e7 c0 74 84 33 cd'), textout=CWbytearray(b'1e af 6a 4d bf 15 75 11 ed 62 6b fa 64 60 b0 2b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'5e 15 76 bc 08 91 8b 57 7a ca da 52 56 9c 55 3e'), textout=CWbytearray(b'50 aa 56 f1 e0 87 cf f5 5d 61 d8 7a 1f a3 3f 81'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'62 8e 47 ac 58 48 30 53 89 70 be 8c 09 1c 39 dc'), textout=CWbytearray(b'4c e7 d0 2b 31 ec 61 07 ec 09 8f a8 18 ab 34 9e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.01171875,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'16 a2 a4 fd 9c eb 63 ce 70 12 c6 d6 97 be 05 f9'), textout=CWbytearray(b'b0 e1 d4 6f 15 b2 63 18 f7 b7 50 78 c1 b2 f2 e1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'31 a9 44 a5 7a 59 d0 0e e0 27 43 25 36 b3 03 2a'), textout=CWbytearray(b'50 46 d7 26 d0 c6 ab 83 23 63 89 12 2a 9e f0 ce'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'3c ce 4c 09 c8 d6 9f 91 de 41 aa 2d 1a eb e1 f4'), textout=CWbytearray(b'38 d9 dd 18 3e 6b 5b dd c6 1e 7e 65 14 4c cd c2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'0c 77 58 60 72 ef 8a 44 c8 fd 01 99 f7 40 0b a3'), textout=CWbytearray(b'4d 55 85 02 81 87 79 74 96 f9 d6 1f 72 5e bc 98'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'dc ff 99 9f 66 8f ca 68 11 8a 8c a3 41 94 54 b0'), textout=CWbytearray(b'70 86 48 c1 ef 97 8f 57 11 40 4e be 4e 0d f6 cd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.08203125, ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'98 35 b9 75 95 a6 34 4c ea 9c c5 65 08 a4 ad dc'), textout=CWbytearray(b'16 cd 19 56 af 81 cc 2c 10 26 da 8b cb c3 ae c2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'82 ca 24 41 fa 11 7b ff d6 18 c6 63 b1 e7 45 42'), textout=CWbytearray(b'b2 82 8f 13 ed 31 a6 67 61 59 6e 0e 1c c4 4c 04'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'06 9a 87 51 c8 f3 ed 3d e8 ee e3 56 e3 74 84 e8'), textout=CWbytearray(b'a7 12 14 63 9e c0 a8 68 16 4a 0c 64 47 4e 33 24'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'93 db c3 51 ae 99 61 f9 d3 e2 f3 99 a0 f6 bf 4b'), textout=CWbytearray(b'a6 1d c9 e8 06 d8 62 c4 58 f6 79 e8 82 09 11 11'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.1328125 , -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'07 c5 ea 8c 17 97 51 a8 9e e6 96 ee 7f 9a 48 ee'), textout=CWbytearray(b'91 68 32 c9 24 94 e5 0e be ec 6c 41 ee 09 9d 64'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'48 00 bd ce 55 e6 85 ef c3 e2 c0 57 a2 76 55 7e'), textout=CWbytearray(b'c3 da 5d a7 08 0a b5 df 8b aa d5 04 5e f2 f0 66'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'1d 68 1c 28 84 20 46 76 c6 a8 b5 5b a7 b9 42 2d'), textout=CWbytearray(b'd7 45 ed 1e ee 3b 58 4c 6d 6d 54 bd 5b cd b2 a7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'd7 56 da f9 9d 8b 5c c5 6b 00 89 a2 d6 2f 5b c1'), textout=CWbytearray(b'82 f4 25 ae d2 83 40 1b 41 dd ee 9c cb 22 11 2e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'16 c1 93 84 ef d3 d7 c0 c2 51 b5 69 a8 64 97 2e'), textout=CWbytearray(b'94 8d cb dc 48 9c 06 57 93 22 a5 e3 7d a5 e3 7c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.015625  ,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'18 f8 52 3e 84 8c 57 d9 00 4e da 45 0c b7 10 b3'), textout=CWbytearray(b'90 98 b2 57 0a ea 6c 1b 17 3e ea df 54 67 39 6b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'f2 09 d8 97 70 89 d8 3e 63 a3 62 8b fb 3a 1a 27'), textout=CWbytearray(b'24 1b 4a 83 33 1d d1 0c 81 2c fb 31 ab 05 84 c3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1328125 , -0.0703125 , ...,  0.0234375 ,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'4a 58 df 6c 5d 86 70 cd f0 34 3e 8a ff 53 d7 33'), textout=CWbytearray(b'bd 0e b3 f7 45 8e 53 36 7d c0 94 bb d6 ed d7 41'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'04 4b e8 ee 84 cb 9e 55 74 32 72 e5 8b 8d 2e 52'), textout=CWbytearray(b'54 58 80 5a 81 00 1c 8f c2 5e 11 20 9b 4a c6 26'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.1328125 , -0.07421875, ...,  0.015625  ,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'47 39 8e 2c a6 82 3e e5 ed 29 35 7f 63 d4 38 56'), textout=CWbytearray(b'd7 b3 c7 00 fa 83 36 87 5f f0 61 9c 48 2e 19 9c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'8a db be 5e 7d 63 de 25 42 6c 7c 60 0b 33 a4 df'), textout=CWbytearray(b'd9 0c 4a 9d 24 87 28 6b 7d d9 be 1d 78 f5 b7 92'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01171875,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'5a 59 3c f7 0d 43 a1 2d cc 6a d1 c5 12 af 7d 66'), textout=CWbytearray(b'f3 53 a2 93 98 24 ec 16 ac 02 1f 0c dd 8d 49 14'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'7c 06 f5 75 66 ef df 18 1d 6f 74 d1 78 42 5b f6'), textout=CWbytearray(b'42 a1 e7 f1 8d a5 08 04 70 80 75 9a 2f c6 3e ba'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'be ef 8e 9c 2a 1a c5 af 10 38 80 73 f5 aa 1e 38'), textout=CWbytearray(b'ff 19 ea 88 7e 25 00 10 9d a9 41 ef 31 12 61 45'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'c9 a1 d6 93 75 f3 d1 5e d4 fb a5 02 01 92 4f 2d'), textout=CWbytearray(b'b0 42 84 7e 34 b9 e2 5e 8a c9 7b 49 f7 ca bf 5b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'85 5d 1f 4e ce 0a e1 af ee 45 3a 5f 06 d9 93 67'), textout=CWbytearray(b'd8 4e 25 08 1e d8 d2 a7 32 27 fd a6 b5 cb 88 52'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'8b ac d8 74 f8 b4 2b d9 cc 81 74 52 bc 02 61 97'), textout=CWbytearray(b'89 d8 c3 b2 f3 4a d3 05 24 54 73 0b b9 fe 42 23'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'd3 d8 92 59 7f 89 ff 5e a9 93 74 07 79 e7 23 d6'), textout=CWbytearray(b'33 10 d9 13 f4 42 e7 6e 9f e6 7a 4a 5e e8 4e 05'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.02734375,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'4a 89 42 a6 66 83 ae 73 c5 3d c4 64 7e 28 c7 04'), textout=CWbytearray(b'bd 48 bb be 15 25 27 ca 56 e8 91 80 17 3d d2 96'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.14453125,  0.03125   ]), textin=CWbytearray(b'83 34 36 da 66 e4 53 9d fc f4 c2 4e 64 39 88 05'), textout=CWbytearray(b'cc 63 7e c9 08 f4 08 f3 87 1e e2 3e ab b0 e4 66'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'21 d1 fc b5 26 b4 77 47 af fb 7d 86 3c 8f d9 54'), textout=CWbytearray(b'80 16 7c 53 27 44 79 7d af 1b 1e d2 56 94 2a fe'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0703125 , ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'e3 f7 23 3b f6 04 b4 64 df 4a c1 fc ba d3 c6 7d'), textout=CWbytearray(b'f1 8f cc c6 6e 48 3f e7 74 6d 1a cd 0b 1d ff 4b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.1171875 , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.01953125]), textin=CWbytearray(b'5b 88 1d d3 6c 09 b8 c2 7f 08 6d 92 5a f3 b0 e0'), textout=CWbytearray(b'0c 57 de 86 7a b4 1b 71 1e 47 de ce 2d f5 c6 f6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'c1 9f 20 94 b5 70 68 ec 91 c9 d9 dd 56 0f 40 5d'), textout=CWbytearray(b'3d 97 13 85 7e 48 69 8c 80 a2 74 3f 12 d5 a2 aa'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.078125  , ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'a6 52 15 f6 25 51 b8 68 83 d7 99 81 cf fc e0 be'), textout=CWbytearray(b'8a d8 34 78 cd fc 19 e7 a9 28 81 ee c1 f6 34 8c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'f2 3e 83 25 fe 40 fa 76 91 5e 4d b9 be 04 b6 7b'), textout=CWbytearray(b'17 23 c8 0e 32 26 2f 53 53 6f 1e a7 62 c6 3e 84'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'74 5f 64 44 3d 63 9c 5e b0 8c 7e 18 7f 3a 80 63'), textout=CWbytearray(b'd9 11 75 dc 28 65 97 ef 12 1d d3 58 f3 53 c7 65'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'd8 10 4c f2 c6 fb 18 db 9c 7e 42 66 c3 6f 23 cb'), textout=CWbytearray(b'80 52 70 1b 1c 16 69 90 8b 36 14 bb 5c 0b df 99'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.11328125, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'99 6b 1d f5 a6 64 49 80 14 f4 39 3f 46 35 ab b0'), textout=CWbytearray(b'53 80 19 bf c6 d9 29 a1 32 77 57 1e 21 22 e2 3a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.02734375,
           -0.140625  ,  0.03515625]), textin=CWbytearray(b'f3 4d 61 eb 83 9d db c7 97 4d e3 55 d3 b7 60 22'), textout=CWbytearray(b'2f 53 d3 1e 11 ea ce 23 0c 50 d2 ef 92 f8 a2 0b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'72 7e 72 09 72 11 94 36 67 53 6d 0b 4b 96 e8 f0'), textout=CWbytearray(b'2a f3 c7 60 ce cb 76 94 dc 01 0d 74 14 37 58 c0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.11328125, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'80 54 d3 c3 aa 43 3d fe 63 21 73 52 65 1d 88 db'), textout=CWbytearray(b'43 09 a2 f1 e2 de e9 aa 0a 75 11 59 b8 e1 7d f8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'99 52 27 e7 11 bc a8 c3 3f f5 cd fa a4 da b1 e7'), textout=CWbytearray(b'41 c3 7f d3 92 d4 41 f0 08 92 06 ab da 29 c6 ee'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.03125   ,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'f7 af 92 67 24 95 d5 43 b5 5d 8b c2 2e e6 5f f4'), textout=CWbytearray(b'5c f0 9c 65 b7 b4 31 f3 69 2b a4 30 c8 1c 14 45'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'65 68 67 43 83 25 9b 4e 18 20 a8 6a 03 5e e4 d9'), textout=CWbytearray(b'62 cd bd 87 e3 8a 3c 58 db 57 9e 15 1b e0 f4 97'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'6a 55 8c 5c 54 75 4a 0b 77 c9 21 5c 8c 78 35 b7'), textout=CWbytearray(b'26 f9 74 56 45 37 e5 b0 15 46 96 08 1b a9 4a b1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'04 b0 c4 62 42 b8 71 37 83 cc 58 4c fa 41 0f 17'), textout=CWbytearray(b'c6 b8 f5 b0 0d 50 b9 01 e3 42 34 46 48 f8 bf 6b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'9b 76 f2 f4 d7 e6 3e 35 6b 55 34 5d 8f 41 2d 58'), textout=CWbytearray(b'bd 61 3e a2 cc 62 ee a6 46 50 c2 15 34 f7 72 c0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'90 0e 82 fe ef bf d2 c8 d1 51 76 44 46 0f c7 7a'), textout=CWbytearray(b'b7 1e 5d d4 b3 3f 32 7b c2 c5 da 74 27 f9 76 83'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.14453125,  0.03125   ]), textin=CWbytearray(b'f0 88 98 bf 69 88 b4 51 67 b1 68 26 98 d1 dc 6c'), textout=CWbytearray(b'24 eb 73 b5 08 81 f8 a8 b1 ab 7d 5f 48 40 07 1a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'72 ce 91 6b e4 d4 5d 00 23 e9 1a 35 17 ac 7a 58'), textout=CWbytearray(b'3e 51 23 b8 66 18 66 30 ba 74 87 52 32 d8 67 21'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'c6 53 5d 4b 0d bf 2e b5 b3 94 19 22 cc 9e 3d 85'), textout=CWbytearray(b'22 31 66 93 56 de d0 f7 6d b1 b3 ba 82 82 fb 8b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0703125 , ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'6a 7d 3a 61 98 1e 3c 58 db 1e 4d 11 1b 1d 87 52'), textout=CWbytearray(b'42 c9 7a 89 1d 74 38 85 a6 03 28 02 03 e8 b3 b8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.08203125, ...,  0.03125   ,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'72 2d 2a 9b e2 a9 71 16 71 3c 4f 56 9e 46 46 5f'), textout=CWbytearray(b'59 4d 43 d8 4e 35 b4 45 a7 61 2c bb 5b ab 0f 44'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'1e 46 7d 4f 33 df 25 ec 47 1d ac 85 1c b9 fe 67'), textout=CWbytearray(b'62 2c fb dd 6c 04 f7 df 73 23 5d 12 9d 5e 79 d8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'60 78 4d 20 26 1d ef 01 53 57 b0 46 24 22 c6 14'), textout=CWbytearray(b'82 30 42 f3 95 50 ca 7b 24 0e 5c 9e 5a 5e 99 3a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.11328125, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'ba dd c7 4e 5e 06 ff ad 83 38 8a a4 82 6e 56 ec'), textout=CWbytearray(b'3f b8 98 49 d3 34 01 23 40 4c 57 90 be 57 8e e6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.140625  ,  0.03515625]), textin=CWbytearray(b'8d 28 a3 28 62 51 8f 8e a0 a5 fe a3 a8 af a6 56'), textout=CWbytearray(b'fe 22 b2 e5 f7 a0 b4 17 d0 48 9f 49 f4 c6 e0 b5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.11328125, -0.07421875, ...,  0.02734375,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'ef 9b 08 fa bf 10 43 8d 56 e2 c6 96 03 09 0c 7b'), textout=CWbytearray(b'8c df 45 72 26 f4 a6 d5 24 aa aa e8 26 10 45 d3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'b1 4a 1b c4 63 af 4b a2 0f 5b ca f0 c4 30 42 70'), textout=CWbytearray(b'51 c6 55 82 6a 09 23 99 02 e2 d5 9d c8 81 34 e5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'fe ae c9 ae 0d 00 bc e5 c2 1d df 4e 59 85 cb b6'), textout=CWbytearray(b'd6 02 57 6f 3c 99 c7 49 c1 9d 70 6b 85 34 a6 84'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.14453125,  0.03125   ]), textin=CWbytearray(b'00 44 8c 06 28 13 b0 c2 63 73 38 3e b0 aa b4 2b'), textout=CWbytearray(b'b0 41 34 d0 d9 44 c0 24 c7 be 89 7b 5b 75 9d b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.14453125,  0.0390625 ]), textin=CWbytearray(b'7b a2 ed 1d 8b 90 d6 34 d6 fd 08 4f 10 47 42 bc'), textout=CWbytearray(b'43 9a 68 39 54 47 c4 79 e2 12 cb 3b 83 75 e9 80'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.0234375 ]), textin=CWbytearray(b'18 76 6b af ef d9 5f f3 28 4c 37 e5 b6 65 9f 40'), textout=CWbytearray(b'ee 10 e7 72 7b 0f 0e 4e 04 e0 33 72 19 1e 1d 86'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.02734375,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'16 84 e8 78 1c 19 e0 93 46 77 39 af 04 8a b0 81'), textout=CWbytearray(b'bf 40 c6 90 bd b1 2b f7 f7 1c 48 a5 75 c1 cb 19'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'92 39 d6 08 00 e3 75 e0 8e 2d be 86 03 1a 2c ab'), textout=CWbytearray(b'd2 ae 1e b0 9b 04 7c 3f 17 fb 25 c8 5b ac 63 b7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.0703125 , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'd1 7a 79 d7 80 44 9b 01 4d 90 66 3a cd 84 c2 6e'), textout=CWbytearray(b'e0 85 25 3d b1 0f b2 25 a0 bb 11 9e 96 69 03 4e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'4f e6 4c 42 cd 2f 45 32 a2 4b 79 c2 0a 3a 24 83'), textout=CWbytearray(b'79 67 b5 61 5d 1f c2 ef b1 e6 7a cd 2d 29 8c 2f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'86 a6 12 bf dd 44 bf 53 e8 c8 d6 18 9c 31 f8 a0'), textout=CWbytearray(b'72 3f da 9b ca b3 a1 c1 62 9a 10 03 b7 c2 00 d6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.125     , -0.07421875, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'70 aa d7 c7 d3 75 b7 67 e8 cd 5c 28 4b 0c 1a 7e'), textout=CWbytearray(b'cd 8d 6c 0c db ac 54 38 ba 17 98 64 b3 b7 6a fe'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.14453125,  0.03125   ]), textin=CWbytearray(b'fb eb ae ec 06 3c dd 1a 70 55 ed c2 6e 20 ba 49'), textout=CWbytearray(b'03 43 19 5f 99 4a 84 62 0d db 3a dd 9d 2d 15 f1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.07421875, ...,  0.0234375 ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'00 3a 77 2d fe bd 9a 93 74 06 c7 d7 03 cc 35 b4'), textout=CWbytearray(b'ee fc 77 3a d6 ba 12 67 a4 21 3a 45 4a 2a eb 73'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.14453125,  0.03125   ]), textin=CWbytearray(b'72 44 02 15 a4 1a f0 b4 1a f2 e3 b6 bc dc 27 fa'), textout=CWbytearray(b'5a df f6 be 22 00 fe f3 d5 e4 4c 07 d8 41 cd 64'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'21 1d 28 a3 64 92 3f a3 f6 25 d6 31 14 fe 55 0a'), textout=CWbytearray(b'5f aa 90 08 a5 ee 0d 2f ee 07 dd dd 77 d0 59 b8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.1171875 , -0.07421875, ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'02 43 c7 14 51 d1 15 31 7b f6 20 62 ff 01 4f a8'), textout=CWbytearray(b'2e a5 87 98 84 9e 9a ba d3 6d ce 9c ed e9 dd 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.140625  ,  0.03515625]), textin=CWbytearray(b'ac a3 7a c8 b9 f1 7e 04 66 63 43 46 9b 18 46 ed'), textout=CWbytearray(b'05 84 09 f7 b4 a1 25 dc 1a fe e9 8d 3f 18 ec e7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.06640625, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'39 94 b9 d5 55 a1 3d c3 82 a5 2e 76 73 38 20 47'), textout=CWbytearray(b'87 fd 0e 4d 78 43 e6 ff 91 15 c2 29 43 be 87 c5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'2f c4 42 79 ff ca 8d c4 03 c2 67 5c 5e e3 d1 68'), textout=CWbytearray(b'97 02 e0 bf 8a 5f 31 e6 a5 fb 86 1e 95 89 15 e7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'e3 71 7f 19 19 27 d0 80 ba 7f 50 a0 d3 a7 52 59'), textout=CWbytearray(b'9d af 98 18 f5 07 ed 8e cd 40 3e 32 a9 0b 02 92'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'ce 84 e1 9c de de de 8a 1e 56 8a 09 e3 71 64 85'), textout=CWbytearray(b'51 6e 46 2b a1 20 6a 1a b7 7b dd 0e ad 6c ec 29'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.08203125, ...,  0.0234375 ,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'74 ed e3 70 30 ec d4 e8 64 61 d7 1c 01 d7 bd b3'), textout=CWbytearray(b'5e f4 4c f3 f1 60 b3 14 f6 f3 57 76 a3 83 4a 87'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.07421875, ...,  0.02734375,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'f2 20 1e 86 d0 8f d6 4f 66 c6 8c 5a 80 67 98 c9'), textout=CWbytearray(b'72 56 af 87 5f 76 34 d8 95 0c 25 c6 7a 86 96 30'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.11328125, -0.078125  , ...,  0.015625  ,
           -0.17578125,  0.02734375]), textin=CWbytearray(b'52 2a 12 15 11 78 c4 90 57 06 de 3c 88 b8 3d d8'), textout=CWbytearray(b'38 2a e3 49 50 79 61 c7 2b 7d 57 85 70 f3 41 5e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08984375, ...,  0.01953125,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'e5 ac c2 4d 9b c2 1a ec 91 36 a1 1c c3 68 ed 02'), textout=CWbytearray(b'96 c3 e0 ad b3 91 22 49 0c da 04 4f 89 5e e5 1a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.1640625 ,  0.03515625]), textin=CWbytearray(b'55 b8 e7 57 65 7f be b3 42 81 4b 67 4f 21 3b aa'), textout=CWbytearray(b'39 3d b3 69 3e 79 c4 26 28 13 9b d2 6b e5 8f f1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.08984375, ...,  0.01171875,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'53 6b 8a c1 4e 55 dc 2c 48 a2 69 76 75 a8 d3 5e'), textout=CWbytearray(b'e8 56 e1 95 cc 59 34 cd c0 4a 7b 77 8c 69 10 c0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'da 1f a6 7c 99 39 e2 81 af 57 7b d1 fd 68 cf 6d'), textout=CWbytearray(b'42 a8 10 15 57 49 7b f4 df af 77 a1 c7 7f 0e 83'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'73 54 19 9f e0 56 40 87 b1 56 ee 54 c8 5d 93 ee'), textout=CWbytearray(b'e1 0b 39 40 11 68 83 68 1b 8c 3b 67 43 23 58 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08984375, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'1a ec 10 fc b8 fc 2c 2f ee 76 11 a4 d4 da 6e b6'), textout=CWbytearray(b'fb f7 26 6c 60 25 db 0e db a5 4f 73 ce 4a a4 fb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.11328125, -0.08984375, ...,  0.01953125,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'2b c6 31 9a 71 1a 52 5d a1 2f 0f 6c cb 73 3f 87'), textout=CWbytearray(b'39 9e 85 b4 6a 44 b9 38 4e 7f 45 dc 3c 03 b4 f7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.1328125 , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'd6 80 12 bb 3c 7a b6 c5 36 cc 37 27 58 f1 0a 78'), textout=CWbytearray(b'36 9f dc b2 f1 0c 59 46 18 b0 a6 7e 32 13 1b 34'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08984375, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'e0 69 0d 48 6d a0 c2 17 9c d4 8a 20 09 f4 cc 35'), textout=CWbytearray(b'91 38 a8 3a e2 df 94 75 ce 60 00 2d b7 d4 7d e1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'71 d6 9d 61 9c 5f 7d a8 99 1d 16 31 9d 15 55 67'), textout=CWbytearray(b'87 2a 31 42 21 91 e9 67 f7 16 3c 8e 87 df 88 af'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0859375 , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'3c 1e 75 15 6c 44 b9 d9 56 02 f8 a5 b3 b2 d1 f0'), textout=CWbytearray(b'ef 63 1d ce 06 f1 63 4e 15 f0 50 80 11 ce 39 a8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'd6 f3 e3 90 c6 b6 71 4d 3f af 64 3d 4f f1 4d 00'), textout=CWbytearray(b'4b f5 17 b1 4d 9c 07 07 2d 38 e3 a4 e5 e8 40 70'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08984375, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'0a fd f2 a8 15 6f 6e 99 f2 9b 1a 50 7b 4f a6 07'), textout=CWbytearray(b'56 88 7d a3 00 94 59 6d 1d 83 18 dd 18 1e 0f 59'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'48 36 b0 12 5f 4f 71 29 c8 57 12 cf de f5 df 99'), textout=CWbytearray(b'f1 ad fc 96 14 d8 ed f2 bb 8b 8e e1 b8 61 43 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.07421875, ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'df 35 98 da 0f b5 8b d3 38 d3 3f 9e ac 63 6e 0f'), textout=CWbytearray(b'a4 e7 0f 70 26 98 22 03 4d 43 3d 4c b7 7e 52 cc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'ce ee 4b 38 2e c5 7f 32 71 31 53 52 a8 6e 91 24'), textout=CWbytearray(b'ae a9 f1 e8 c2 f7 d3 fe 4e 2f 7c 51 8a 83 b3 9c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.08984375, ...,  0.02734375,
           -0.1484375 ,  0.04296875]), textin=CWbytearray(b'49 cb e0 ef a6 74 c7 5b d1 9a f3 41 07 b5 52 ac'), textout=CWbytearray(b'30 a6 8d aa b6 2f cf b9 c8 12 0a 90 0d bc c1 cb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'c1 78 08 11 5c c4 3b 3d 8b 19 b3 6e 12 f5 75 0e'), textout=CWbytearray(b'23 1b 93 56 53 5c aa 56 6d bc 38 38 5e 73 50 fc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.09375   , ...,  0.01953125,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'af 2e 53 93 42 99 04 d4 2f 08 0b 60 67 a9 e7 06'), textout=CWbytearray(b'24 b3 9a 74 95 09 29 b3 ad e0 dc 26 97 08 f5 2a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'0e 7f f1 ac 55 bb 05 36 d6 17 bd cd 2f e5 a5 c4'), textout=CWbytearray(b'bd a6 9e 20 4c 37 0b 79 00 00 86 52 de da fb d7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'b2 e6 9f 18 ec b3 0d 8f a9 9c bd 6d 8f 26 14 52'), textout=CWbytearray(b'd0 19 df f2 19 23 1f 88 1c f1 87 de 76 01 d8 4c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'6e 95 f4 4e 83 8e da 7c 40 b0 2a 61 23 4b 1a 9f'), textout=CWbytearray(b'83 7f 04 ff 7f b6 4b 5a e8 89 90 e6 e4 a4 31 40'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.11328125, -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'f2 ac 27 d7 ca 79 81 ab 8c 23 3c c8 88 2c 20 ee'), textout=CWbytearray(b'1d 0e 8e 9e 3c f0 17 f6 83 ba 66 01 5b c8 09 56'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'ed 48 36 c7 a5 93 57 db f3 f6 ef 1e 12 05 fe 95'), textout=CWbytearray(b'85 4c a3 c1 c8 33 da 0d 8d 0a 82 0c 46 55 84 5b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'e6 cd 9d d4 ce 50 e0 d4 14 6d 5f 51 88 c3 4e 0e'), textout=CWbytearray(b'8e f8 53 03 1d de 42 62 02 23 42 05 32 49 10 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.078125  , ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'e3 ee 9e df a2 2e df b3 78 fd 2e 5a bb 13 a0 35'), textout=CWbytearray(b'19 91 f7 e6 9e e1 e6 fe 42 7c d2 86 cf 79 0c 89'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.16796875,  0.03125   ]), textin=CWbytearray(b'87 e3 0c c5 54 f2 45 12 4a 92 fb 66 92 67 57 0d'), textout=CWbytearray(b'a4 9e c7 78 3e 9b 01 b2 27 29 2d f2 42 9a 7c 51'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'62 d5 37 60 b2 c1 84 ab 8d 77 41 bd 7b d3 dc 19'), textout=CWbytearray(b'b8 ea a4 d7 66 09 db 60 2b be 21 94 4a 6e 53 c4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'2e 48 9d 1d 92 a9 7a 29 fb 76 7b 3a aa c0 d0 d1'), textout=CWbytearray(b'aa 33 b9 37 ca 4c 15 ef a9 33 e0 bf e7 5d 2b 76'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'81 e4 67 ed 58 89 5b 38 a5 67 f3 91 71 80 83 33'), textout=CWbytearray(b'1c 16 25 22 83 40 cf b0 81 92 70 05 a5 be ef 92'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'de d4 d7 9c 4d 84 06 6a f9 11 74 2b b5 d0 0b 8f'), textout=CWbytearray(b'54 14 89 46 96 10 8b 1d b7 00 f6 e2 0b 58 32 ac'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'5d 56 e7 c1 17 9e 6f ef 74 f3 bb 6c d4 97 32 69'), textout=CWbytearray(b'ea 15 56 df b5 3c 18 8d b0 95 26 8e 4e 70 7d b3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.08203125, ...,  0.01171875,
           -0.16015625,  0.0390625 ]), textin=CWbytearray(b'89 f6 c6 af 57 e4 5e 2f fb f4 f1 23 12 83 a8 83'), textout=CWbytearray(b'e5 4c 65 42 5e 57 21 36 1d 84 92 c5 9d 7b 0a 8c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'db 85 d1 ae b3 ae e4 8f f3 98 66 32 d0 e1 d7 81'), textout=CWbytearray(b'6c 97 a1 83 33 94 80 0f 26 be cb b6 ab bb f0 26'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'd4 b9 35 47 e9 71 6f aa 9d 34 2a 27 fe 55 ff 70'), textout=CWbytearray(b'90 a0 06 11 13 63 77 d0 99 da 75 2e 59 ce 97 46'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0859375 , ...,  0.0234375 ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'40 18 02 9c bb f0 4f 35 4a 09 dc af f0 26 50 c9'), textout=CWbytearray(b'1c 15 a7 0f 21 4a a3 a0 c3 cf 6e d5 2e ef ec 10'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'd5 42 13 9b 29 35 4f 3b 2e 5e ca c6 a0 6c 60 a5'), textout=CWbytearray(b'73 95 cd 84 ed 38 85 56 a3 f7 b6 f9 0f fc 65 d4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.16015625,  0.0234375 ]), textin=CWbytearray(b'48 ae 18 d7 ad 17 00 34 81 49 1b f2 7b 95 7a 79'), textout=CWbytearray(b'31 47 a4 7a e2 82 58 02 37 3e c8 67 a5 39 d9 2f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08984375, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'78 5b d8 7e 8a 7e 56 74 ac c4 3b 4e 4b 68 cd 07'), textout=CWbytearray(b'75 ed 8b 27 7c 02 70 24 da 94 c5 f2 f4 17 4f 93'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'67 ef e2 ee a4 f0 54 f4 92 e0 46 94 bc ad b0 a6'), textout=CWbytearray(b'75 65 33 4e f9 0f 00 58 2f 0f 19 c3 7f 9f e9 8c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.13671875, -0.078125  , ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'5d 6a 49 29 55 b7 12 14 e8 0f df e7 26 84 ac 13'), textout=CWbytearray(b'c5 1c 9b 04 d0 b1 fa ac 42 7b 03 c0 9e 67 a0 44'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'c0 d0 39 17 f7 ff 88 c7 a9 6f c0 8f f3 6b 4b 2c'), textout=CWbytearray(b'35 f6 59 50 71 83 b0 3e 42 ea d3 6c 07 ba 1a db'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.015625  ,
           -0.16015625,  0.01953125]), textin=CWbytearray(b'08 df f2 e6 91 77 e0 cc 21 0b 12 f3 b2 c5 a3 1e'), textout=CWbytearray(b'7c 1f cd 38 cd e3 d6 4c dc 2c 5e 09 57 2a 77 b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'fc 11 c7 c1 95 f1 73 a8 44 c5 38 41 23 b4 40 1c'), textout=CWbytearray(b'87 b5 d7 99 2e 76 14 90 15 02 e2 f4 5d 87 42 77'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'c4 bb 6c e5 d9 f4 e9 cc 20 69 bc dc df 63 9c 09'), textout=CWbytearray(b'29 96 3a 28 b8 df 9e 39 a8 c4 75 57 5d 93 1e 00'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'ab a5 ab 87 93 2c 25 61 18 cb e2 c6 0e 80 66 21'), textout=CWbytearray(b'b3 78 76 d8 0d 2c 5d d9 32 96 3f dc d4 f5 59 7b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'f3 89 97 48 6b d7 b0 44 c5 a9 19 27 2f 32 4a 50'), textout=CWbytearray(b'28 e9 e4 67 81 8a dc ad 0b eb 3f 37 99 da 3e 34'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.08984375, ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'06 43 0c 7e 3b 59 6c ce 8b f3 87 42 90 90 2b f1'), textout=CWbytearray(b'06 fd e0 3f d6 8b b7 2f 40 31 ab 45 6d 79 e2 a2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'0e a8 d6 72 36 0a 85 cd 42 7f 9f 89 04 37 88 82'), textout=CWbytearray(b'f7 8d 55 7e eb 1a 12 46 ba bc a9 c3 0c 26 3f c4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'46 9c 06 de 6e dc 55 dc 18 09 64 e3 a0 74 16 83'), textout=CWbytearray(b'b4 5a 8e 5d c4 97 6b 09 89 04 f6 43 74 ab a3 66'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08984375, ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'58 e5 fa 55 65 68 b0 c8 c6 85 e0 c7 f8 a3 0f 12'), textout=CWbytearray(b'cf 08 b9 35 3c 7f 60 c5 d6 a7 df 1b 38 e0 b2 cb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.0234375 ]), textin=CWbytearray(b'ac e0 65 60 9c 45 32 c6 f2 01 ed dd 6a 74 bb e6'), textout=CWbytearray(b'5f c6 a3 06 af ed ec fa ee 51 86 0e a0 6a 67 d4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.1484375 ,  0.0390625 ]), textin=CWbytearray(b'18 a7 9e f7 8e c2 19 66 44 11 9f d7 3a 9c 55 b1'), textout=CWbytearray(b'8f df 9c 53 30 b1 da 47 84 6e f2 0d 4d 12 63 16'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.11328125, -0.08984375, ...,  0.02734375,
           -0.16796875,  0.02734375]), textin=CWbytearray(b'ae c7 36 24 54 65 81 8b de af cc c4 79 94 eb eb'), textout=CWbytearray(b'6a a1 b4 bf 74 0f be 8e 6b 04 8d c2 d4 ee 74 cd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'c3 eb ac 5f 86 3a 79 01 bf d5 06 3a 07 05 af 9d'), textout=CWbytearray(b'dd 49 23 64 41 f9 98 cc a4 8b 6e 42 b0 00 e1 30'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'52 16 98 2e 83 94 57 60 db 35 a6 08 ab 09 92 43'), textout=CWbytearray(b'8e ff 53 f6 d4 c3 60 89 58 49 f3 87 b5 f4 8c 31'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.08984375, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'64 92 9d bf ec 4d dc 9b 73 8c 8c d8 c5 89 46 a7'), textout=CWbytearray(b'88 78 6a e0 f2 d3 cf 8e b9 ad 46 9a 54 59 cc 23'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'c9 fc bd ad 0b 81 84 a5 91 98 16 a1 6e f3 2b a5'), textout=CWbytearray(b'57 6f b0 da 9e ce 6c 66 78 a4 5f 3f 4b fa 7d e2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.07421875, ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'26 d8 4e e6 55 9f e5 a8 1c 24 b7 c2 9a 4f cd fd'), textout=CWbytearray(b'76 a8 73 7c a5 c3 ca 44 bf 98 b3 d7 f2 2e d4 b8'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'18 94 d2 9b fc 12 5c aa e6 b9 b8 be 42 df b5 e2'), textout=CWbytearray(b'81 e8 35 03 fc f5 24 29 c5 3d 58 92 00 6a c5 e1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b8 5c db 07 da 84 b9 bf 13 e3 7b b5 d9 c8 0a c1'), textout=CWbytearray(b'd8 65 8d 75 01 14 16 d0 a5 f5 8d 21 bb ac 2a a5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.00390625,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'0d ec 47 7c 08 eb 28 27 f7 2a 3a 88 9b 2e 7f cc'), textout=CWbytearray(b'd0 45 9f 13 a3 49 71 24 4b 20 a6 20 b7 ab 05 35'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'd0 a8 58 62 3e fb ee 9c c6 55 c7 49 e2 b4 92 27'), textout=CWbytearray(b'1c 8b d5 ef 7a 7d a9 d4 01 0f 92 ef 35 ac f3 af'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'c1 44 ed 6b fe 8a a0 ff 51 5a 85 b6 3f 02 2f 95'), textout=CWbytearray(b'aa 7a 6a 66 d5 c1 a9 12 ab c3 31 16 1d 32 75 65'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'8a e6 68 9a 3f b5 f5 65 55 b9 00 0c 3a e2 8f 16'), textout=CWbytearray(b'aa ae 17 1e cf f6 c2 2d da a0 de ec 7a be 3c c2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'47 c1 6a 4a 9b 1f 33 1e 2c 1d c3 04 7d 09 d7 14'), textout=CWbytearray(b'69 18 07 0e 08 31 e1 2a f4 9e f0 33 ad 3b 57 89'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.07421875, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'a8 f1 a9 69 dd ad af f5 f9 a5 3b 30 e3 2d 4c 8d'), textout=CWbytearray(b'04 f0 0d 9b 3e ac c5 21 c7 4c 27 fc 86 c3 a0 07'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08984375, ...,  0.02734375,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'cd e7 12 2f 28 87 80 60 4d 7e 66 1d 48 e4 df 7d'), textout=CWbytearray(b'd4 55 de b6 93 c5 ab 04 2b b0 aa b0 6d 7e bc 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'4e 3b d4 43 cf 32 7d ce 39 a6 af df 54 77 99 1e'), textout=CWbytearray(b'0b c1 2a ff 64 ff ce 92 36 f2 a0 c3 f5 fd 20 ba'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'57 9e 5d 70 57 e1 37 24 4e 94 b6 c4 8b fe 4c 3e'), textout=CWbytearray(b'60 f4 3e c8 f3 27 c2 63 73 a7 b8 1b 85 dd 39 a3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b3 a3 4b 71 98 66 f2 cd f8 f3 51 5b 32 74 f1 92'), textout=CWbytearray(b'71 5b 24 e6 84 23 6d 23 65 b8 12 50 a1 ce e3 e4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'67 3a 58 67 0f 9e ec 66 c8 99 41 04 64 94 5e 1c'), textout=CWbytearray(b'df dc ef 9c 5a d0 96 61 35 55 19 84 5e 57 49 4d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'44 1f 61 30 a8 9b 58 e0 e4 d8 52 dc 1d 95 3d 8d'), textout=CWbytearray(b'c3 ed 2b c3 3c 5a 46 aa 98 a0 87 43 e3 e1 33 f2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.15234375,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'b4 7e d9 a8 af da 3a 82 b6 18 14 67 30 b9 f8 d8'), textout=CWbytearray(b'11 40 20 c2 ca fb 3b e0 9f 87 b9 7a d2 a6 34 d4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'61 69 20 e6 c8 be c9 29 05 a0 42 bb 4a eb 9d bc'), textout=CWbytearray(b'16 36 f4 1b ed f4 fb fc 61 35 6f dc a7 4a 3b 67'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'c1 2c 7f 4c 4c 88 72 81 12 66 bd 35 3a 8b f6 4e'), textout=CWbytearray(b'de 21 ea a2 de 36 b7 08 40 5f 55 e2 c4 84 11 cc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'31 ff 2b 9a 49 b8 b1 3b d8 89 6d 07 3d 18 35 b6'), textout=CWbytearray(b'fb 85 d0 89 6d 22 9c 53 65 df 09 3e ee 0a 7c 40'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08984375, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'0b 87 49 fb de fa ab 69 a9 ee f8 5a 36 a2 ed 7c'), textout=CWbytearray(b'f3 28 a8 39 f4 01 d9 e0 b1 f1 97 9d 38 9d 44 d0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'cf 01 bc 37 8c 18 17 09 ec ad e5 40 53 0b ac c6'), textout=CWbytearray(b'0a c8 15 77 16 0c c3 4c 0d 3a 6b 66 f7 99 ba 1a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.1328125 , -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'8e 6a b1 cd d5 0d e6 d1 97 38 53 2a 86 33 63 ad'), textout=CWbytearray(b'35 80 7c 42 94 c8 95 bc 47 cf 9e b8 05 eb 2f 9f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'48 47 25 6e 65 7f 77 62 9b 5d 49 6e ad b7 a0 a2'), textout=CWbytearray(b'35 5f 6c c4 bd 35 ad a8 dc 48 f8 6b dc 66 ee 8b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'09 eb 90 67 91 6f 38 f6 e4 5a 6a 41 df 65 d9 d0'), textout=CWbytearray(b'3f 6b cd ab c2 ed f4 10 3f dc 99 a7 3b b0 04 20'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.1484375 ,  0.02734375]), textin=CWbytearray(b'41 78 00 82 0c 85 14 db c5 6b 01 bd df 86 27 82'), textout=CWbytearray(b'44 d7 91 0c 50 1e ac fb b8 0f de 4a 08 64 94 26'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0859375 , ...,  0.01953125,
           -0.14453125,  0.03515625]), textin=CWbytearray(b'37 de a4 b6 f5 ab ef 91 e6 f8 f8 28 17 57 eb 7b'), textout=CWbytearray(b'6c d9 d2 03 51 04 ea a0 17 63 f3 ac 23 3c 2f 48'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0703125 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'c8 06 c1 fa b4 f0 40 dd 91 3c f0 1e 36 d6 00 08'), textout=CWbytearray(b'54 eb 65 cd 09 ab 71 0c 18 a5 79 38 5d 76 32 d0'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'8a dd 80 85 5e 23 0e 68 32 f0 27 ee 20 39 8f 0a'), textout=CWbytearray(b'e3 ce e6 25 45 c6 29 23 d6 7e a8 b4 26 22 1c 52'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'a0 c5 3c ed 14 91 f9 d5 da 53 21 e4 10 0c a2 bb'), textout=CWbytearray(b'88 91 a5 60 e4 59 e8 b6 ff 30 b8 9a 8e 2a 1e 0a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'55 c1 97 e5 cf 2e 37 cb 3b b3 78 1d f7 09 43 e9'), textout=CWbytearray(b'12 b7 0b 9b 48 c0 f0 93 33 c0 3c 8b 33 1e d3 33'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'23 91 43 d2 cc 0d d8 a8 58 7b 89 4c ad 2f 72 0f'), textout=CWbytearray(b'f0 bd b4 03 01 3b 79 03 8b 16 46 88 8c 89 fc 34'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'3b 2d 26 06 a8 3a 99 fa 73 31 e7 a2 37 17 39 09'), textout=CWbytearray(b'ea 3e ff 27 dc 63 a3 14 3d 58 46 b6 6b 3e d6 8f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'ba 37 0e a1 bc 25 5e 7f 8c f3 2d 9f 49 3d 75 22'), textout=CWbytearray(b'7b 4d 20 55 c4 7c 86 94 a0 ff 8d dd da ac 35 a6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'8b 16 34 d3 82 90 1e 24 b0 f7 9f 79 1d 8f bb b8'), textout=CWbytearray(b'8f d2 3e c7 3c 01 0a 2b bf 65 e1 fb fc 1c a6 88'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'17 98 0c 9d 1d 24 06 af 26 6d 64 cb a8 e8 1f f9'), textout=CWbytearray(b'71 50 7e cc 2c 3e c8 7b bf 3c d9 46 cb 56 4a 5a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.1640625 ,  0.02734375]), textin=CWbytearray(b'33 24 aa 79 d6 2f d2 56 3b 7a 53 63 f9 c8 e0 28'), textout=CWbytearray(b'1b 5e c4 f4 13 79 fd 2d 55 3e a0 63 0f 9f a4 60'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.1171875 , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'8d e0 23 24 d1 a3 d3 ed d5 3e 18 de 37 9e fe fa'), textout=CWbytearray(b'40 27 ac c4 1c 72 1e df e6 dd 60 fb f0 11 77 a5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.03125   ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'90 9e cf 43 30 7c 87 22 29 42 2d 30 54 9f 1b 61'), textout=CWbytearray(b'87 1e 05 52 49 8d 06 92 5d 23 d7 8b 3a e3 1f ae'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'63 51 95 a6 7d 00 83 3d 03 a6 d1 54 91 b4 2d 7d'), textout=CWbytearray(b'37 12 69 9f 63 fc 86 39 0b 09 28 c9 ae ed c7 5d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'52 20 25 ba 25 5b 00 e5 e2 5b 38 27 ec f4 aa 36'), textout=CWbytearray(b'e6 16 f1 99 07 27 10 74 a3 ae c7 a3 f4 8a 73 cc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'13 08 f8 dc 7e 7e 61 84 71 9c 89 65 e8 33 db cd'), textout=CWbytearray(b'79 a8 63 ea cf a9 35 28 d4 45 7c 84 95 c7 e0 cf'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'a8 e6 78 69 38 09 03 ff 92 d8 5a 08 6b a6 01 6d'), textout=CWbytearray(b'dd 2f 21 c1 77 b3 89 cd 9a 89 2a 30 7a d5 96 3e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.125     , -0.0859375 , ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'1b 0e 7c cf b3 14 4c 7b fb 31 ad 9c 6e 31 8e 61'), textout=CWbytearray(b'c5 19 d0 17 23 5e 87 93 df 39 bf fc 13 67 74 a2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'63 e1 5f da 61 cb 38 53 46 3e 74 08 2b 50 9e ef'), textout=CWbytearray(b'b6 54 a0 b0 2e b2 b0 5f 5b ca 64 b4 7e 81 f6 75'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.15234375,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.0234375 ]), textin=CWbytearray(b'01 29 09 7b 36 50 13 c1 b3 cf ce dc 02 af ff db'), textout=CWbytearray(b'de 23 f3 82 08 3d 8b 1f 10 3c 3c 96 1d df 1e 58'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.13671875, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'39 93 26 7a 15 e1 9d 51 4c c7 fe ae 2d d6 72 4f'), textout=CWbytearray(b'15 48 4e 02 12 2b a6 a6 6f dd 73 47 53 48 0b fd'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'6c 3c 3a 3d 31 9b 24 59 6f 40 51 ba c8 25 22 1b'), textout=CWbytearray(b'aa 88 57 94 8b 29 91 85 a8 62 4e 67 64 3f 4d 1d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.1171875 , -0.0859375 , ...,  0.01171875,
           -0.15625   ,  0.04296875]), textin=CWbytearray(b'30 7e 10 da ed 54 01 ec 0b 99 12 4d d7 6e 9a 26'), textout=CWbytearray(b'0d db b5 82 a9 77 b4 17 41 f5 da c8 85 51 d2 00'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'42 ab cb ac a4 3e c5 e0 a9 9f 73 a6 48 57 aa 95'), textout=CWbytearray(b'8a 63 11 06 5b 77 8c ea ba aa cf b9 6e 7d 20 cc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'73 c5 91 09 ff 45 81 da 85 7e 8e 60 af e2 37 1f'), textout=CWbytearray(b'de 3c 7c b8 6e a5 1f 77 ef 50 fa 3f 88 6d b3 94'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'2b e4 3f 6c e9 d1 1d ee c4 b4 83 f0 c7 5a 26 c6'), textout=CWbytearray(b'90 15 99 a3 8a 52 56 54 fe 70 e7 6f e2 58 18 a7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.1171875 , -0.08984375, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'aa 67 fd 97 97 e2 4f 43 1a 12 4d b0 c8 ee 25 aa'), textout=CWbytearray(b'4f 7e fc cb d4 6d 6f 36 f6 1e c5 5a 00 b4 65 85'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'ba de aa 56 54 2c 9b e1 7f 63 42 18 1f 89 d5 79'), textout=CWbytearray(b'64 c3 98 04 71 bc f4 65 87 51 06 31 76 89 18 56'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.03125   ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'f2 60 3d 8f ee 72 bc ee 75 08 7a ea 9d 9b 0a 75'), textout=CWbytearray(b'ef a1 e9 06 b9 09 69 0b 14 98 1b c7 71 a7 69 15'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.16015625,  0.02734375]), textin=CWbytearray(b'ab b1 c3 08 a1 95 e5 72 d0 9e 8c 22 e4 51 5d c0'), textout=CWbytearray(b'75 d4 d9 6f 38 63 be 2c 55 9d e2 48 d0 c4 57 0a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'c1 91 d2 e9 cb 3b a6 b7 38 af 25 30 1c 4c 69 5a'), textout=CWbytearray(b'59 9a db aa 59 22 d4 44 9c 31 af 0e b1 0b 63 62'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'5c f0 a6 10 78 9c 82 b9 9e 7f 87 02 3d 3e e0 ad'), textout=CWbytearray(b'ec 09 69 73 04 76 45 e2 a4 05 3d bb d2 b5 7e 83'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'4a 73 7e d4 47 20 8b 40 f8 dc f7 c3 07 af 44 51'), textout=CWbytearray(b'26 6e 5b 16 a0 6a 2f 3b 84 7d 12 d7 85 1b 10 1b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'1e 5d 89 29 63 f9 02 d3 40 34 32 22 8e 8b cb 8d'), textout=CWbytearray(b'fe cb bf e2 e7 f8 3e 34 73 80 b7 76 4a bb 10 f6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.01953125]), textin=CWbytearray(b'84 95 39 33 c8 37 61 17 d8 d5 03 bc 65 bd 22 c4'), textout=CWbytearray(b'0d 2e 46 4b e9 a8 bd 1c 60 42 63 bd 69 92 df bc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'25 6d df b0 1d b5 a8 00 8c ca 0d 23 48 e1 7d 56'), textout=CWbytearray(b'03 f3 0e fe a0 1b 47 2d 3a 70 cd 9d bd 4d f2 90'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'94 a1 45 2d c5 f7 f2 2b 5d 8b 01 25 e0 28 c7 77'), textout=CWbytearray(b'b7 79 67 22 56 b0 4e 41 ed ae 3f b8 33 96 ca 20'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'16 6f fe 4e f8 e5 4e 80 02 d7 d2 70 e6 d2 67 a8'), textout=CWbytearray(b'ef a2 d1 e4 7c 29 24 8b 71 30 cf 36 b5 12 6a 06'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'2a b5 fa ee 96 4c 37 a1 cf 17 19 7d 1d 8a 3f f2'), textout=CWbytearray(b'b8 f2 08 8c e1 7f 65 c7 6e 0f da 1e 60 a0 e9 4c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'2a da f1 26 d9 47 31 a1 ab 8e d7 6f 70 1a 65 65'), textout=CWbytearray(b'cb 72 7b c4 23 28 5c 36 a1 05 e1 ec 3a b7 1e b3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'57 6e a0 22 ed 70 7d 91 49 4d f4 bd 18 ee 8f c4'), textout=CWbytearray(b'ec dc 45 9c 33 30 62 7c 50 9e e9 37 7d 1b ca be'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.0703125 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'2a ee 5c e0 57 e3 70 a9 9b 6e 52 8e 9f 80 73 04'), textout=CWbytearray(b'42 f7 8b a9 54 61 e8 5e 02 0b bf 23 45 ca 49 2b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12890625, -0.07421875, ...,  0.02734375,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'be ff 49 3e fe de 33 77 a5 1c 06 53 41 13 5a 03'), textout=CWbytearray(b'a4 29 33 72 23 3d d7 0a c4 4a 45 0c 15 9e 2f 14'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'bb 66 b0 90 58 2b b6 10 a9 f2 27 74 96 3b fa c5'), textout=CWbytearray(b'e4 ca 5a 72 5c a6 d0 70 18 c6 0a b6 f5 5b a9 6e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.15234375,  0.1171875 , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'01 7d 87 50 64 07 29 cd 0f d3 7d c1 a0 e7 e7 f9'), textout=CWbytearray(b'2b 0e bc 59 65 28 e6 3d bf ca e8 d9 ef 64 5d 37'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08984375, ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'ae d7 3c 1f f6 71 16 44 a5 a4 86 af e2 55 6b 9d'), textout=CWbytearray(b'3f 12 17 f7 10 18 4f c7 bb a5 bb 67 e0 23 d3 34'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'e1 e0 d3 ee 3f 66 15 5b 83 29 71 dd 65 df 11 f7'), textout=CWbytearray(b'd6 9e 1d e4 74 67 cd 20 7d c1 ca b2 f8 90 86 a9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'6f 1b bb 91 13 14 57 9e 82 62 84 e9 a8 c3 50 dc'), textout=CWbytearray(b'88 a2 af 49 5e 9e 64 51 34 15 ed 8b e0 a5 29 43'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'44 8b 48 f9 47 53 65 a5 c8 61 71 8b e3 c6 61 d8'), textout=CWbytearray(b'bc 23 90 ed 66 84 2b b5 d1 31 3a 52 4b 72 0b 92'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'b8 78 e4 f6 4d 08 2a 38 ef 90 d4 b5 40 a8 0d 8e'), textout=CWbytearray(b'46 46 dc 8a 20 cf f7 04 ed f9 9f 1f 01 e7 ce a6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'99 f2 12 13 c3 3e 80 f7 6f 85 ce b5 28 26 30 bd'), textout=CWbytearray(b'84 30 1b 6b 8c ed b6 29 9c ce be 5e 91 f7 ee 3c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'87 7c bf e4 60 87 86 a2 30 22 75 d8 fd 7e 0f 4f'), textout=CWbytearray(b'20 26 64 0b 73 99 f1 f5 90 e9 69 af 53 5b f5 60'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.13671875, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'84 9e 2c 91 46 67 08 7b 66 fb 14 16 33 a9 4c 1f'), textout=CWbytearray(b'c1 00 2c 75 a8 61 cf fd 28 c0 fe 91 dc cb 78 45'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.14453125,  0.04296875]), textin=CWbytearray(b'92 09 38 76 63 6b e3 d2 d4 2d 75 e4 ab 4f e9 b1'), textout=CWbytearray(b'8c ef bc ee 87 f9 33 85 28 3a 16 f7 cd 7d 37 6c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.0390625 ]), textin=CWbytearray(b'c4 88 a5 7c 7d 66 6a 23 c6 ce c7 c4 d9 27 7b 82'), textout=CWbytearray(b'fd 1d 72 9c 2c 60 8f cd 31 5c a0 9b dd 1a 7b 27'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'09 0d 8c be 5b 90 6d b3 47 1c c3 c0 65 12 be 69'), textout=CWbytearray(b'80 48 6d bc a4 2f 05 4e 68 e1 9e ae 94 53 94 70'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'df 30 e4 b1 d1 93 0d 1d bd 4f c2 f7 57 75 38 91'), textout=CWbytearray(b'39 ad 0a d9 3c ed f4 ea 82 46 4f 16 6c bc 07 26'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'e3 38 17 53 2e a3 70 0c d8 7d 08 a4 03 4a aa e5'), textout=CWbytearray(b'21 bc f4 9d c7 f7 d5 64 28 fc 8e 08 07 62 b0 45'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'51 ee 7d 21 a4 8b 97 d6 82 a8 c3 a9 b9 8f c2 bd'), textout=CWbytearray(b'8d 43 0e 35 b1 87 fd 6b c1 6d 3e 11 92 67 57 39'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'79 70 6e 35 bd d1 2c e1 30 56 c1 92 8b 78 d9 d4'), textout=CWbytearray(b'64 cc ac a0 32 bd 04 c7 b5 fd 43 14 67 20 c2 04'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'bb 23 90 c7 b9 13 c1 87 79 82 63 49 a9 b7 9b 1e'), textout=CWbytearray(b'6c 80 87 c7 f9 88 da 66 a9 37 0f 8e 46 7f 78 f7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'b8 31 51 7c 91 36 c0 d2 68 d9 f9 a6 78 fd 0f 9e'), textout=CWbytearray(b'6d ae d0 57 4f 3d a1 56 1a 7d 85 5d 35 dc fd b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.11328125, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'2e 67 d3 de 17 fa 1d ac 80 52 fe 8e bf bc c5 5b'), textout=CWbytearray(b'ac 60 29 a2 fb f0 79 c7 3a 17 8b e7 f3 15 43 23'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'04 b4 ee 1e aa 78 a8 2c d5 2e 95 af 96 db 69 f4'), textout=CWbytearray(b'00 9c ca 31 84 ae 67 32 e1 b6 db ea f5 6d 41 b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'0e df 17 65 26 bd 90 97 1e c0 eb 33 98 2b 39 4d'), textout=CWbytearray(b'cb a8 48 30 96 f4 ef 46 0b a7 90 d6 95 db 56 06'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'25 92 6b 6d 5a d4 e0 19 f8 df 7b 54 d6 e8 2a ea'), textout=CWbytearray(b'bd 24 5a 8a 38 32 6d 2f 1e 26 f5 49 cf c5 82 61'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12109375, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'ee e5 97 f4 4e 9c 49 f4 12 dc e8 73 77 2e b2 3c'), textout=CWbytearray(b'76 3e 23 d7 34 be bb da c7 ff bf 08 92 11 ed 35'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.15234375,  0.11328125, -0.0859375 , ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'f4 db 68 65 b4 4a 8b 25 4d c6 82 98 24 99 7e 31'), textout=CWbytearray(b'41 04 93 64 93 df bb 0b 3e ea 7d 5a 6d d9 da e9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08984375, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'77 ee a6 58 fe ee 23 7e bd 1f 7d 47 a4 ec 92 f4'), textout=CWbytearray(b'38 ac dd 12 28 92 39 45 47 3c 82 61 ef 9d be 10'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08203125, ...,  0.0234375 ,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'0a 71 54 83 31 5e b9 3e f7 17 a3 e2 8e 00 ae c5'), textout=CWbytearray(b'51 2e a0 64 0f 62 3d b7 35 50 ac ae 29 2e 11 59'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'bb e6 de 04 2b c5 26 86 fa 06 02 4c 8b f7 47 42'), textout=CWbytearray(b'47 cc 39 ca 9f 13 8c 54 95 cf e9 69 d6 c2 7a 18'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'82 a6 1f d8 c7 24 3b 08 e2 62 4c 35 66 d6 df 2f'), textout=CWbytearray(b'a9 41 7e a6 fd 7f 02 35 06 cd 30 01 bd f1 98 ba'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'f2 fd 0e 2e 71 c2 21 bc 2f 27 df 8f bc 54 43 54'), textout=CWbytearray(b'ef 13 92 e0 c8 9c e1 cc 73 2a b8 49 94 30 44 f7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'f2 80 41 2e f0 09 48 8b 15 7f 4b c8 1d 58 43 b3'), textout=CWbytearray(b'5b cf 12 06 ab ff e5 5e 98 97 5c ab 9f ac c5 63'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.11328125, -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.0234375 ]), textin=CWbytearray(b'c5 9c ab 3a 28 e6 2c 70 8f d4 98 29 7d bd 32 d4'), textout=CWbytearray(b'45 ba d3 f4 f6 a7 f6 59 01 57 af 50 ac 0d 95 02'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.02734375,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'15 c7 d5 77 04 b6 32 2e 74 45 9b cb e1 4d 72 ca'), textout=CWbytearray(b'28 81 78 8c ba da ca c5 62 f1 0e 19 65 62 db d9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.0234375 ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'09 cb fc 88 ee de d0 b3 31 ae 68 b9 ad 45 ee 01'), textout=CWbytearray(b'75 85 2f 86 a4 ad 4c 34 4b 20 61 f6 be a5 c0 38'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'9c aa 5e 1f 12 af a7 8f dc b1 26 e9 e3 7f 18 6d'), textout=CWbytearray(b'33 e8 69 91 4f 1f b4 59 14 d9 b5 b2 0e 29 a8 28'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'89 d3 e6 42 19 7d 46 f6 ba b7 80 26 4f 64 28 05'), textout=CWbytearray(b'85 d2 e7 48 52 7d 84 8e 53 fc 12 89 f0 36 cd 34'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'86 ba 03 21 3c 9f c8 5c 20 b9 53 06 6d 97 d5 dd'), textout=CWbytearray(b'c9 04 c8 85 71 35 9e 0e 60 47 f5 72 b2 ca f5 3b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'7e 58 08 e6 d4 53 fd 6d d7 4b 4d 20 86 5d 12 8d'), textout=CWbytearray(b'7a c2 1b a7 80 b5 f3 37 44 98 fe 97 5f 1c 20 fb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.08203125, ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'e9 8f 82 d4 eb 67 8b 95 a5 f3 a3 b8 67 36 91 60'), textout=CWbytearray(b'8a ec 3a 86 34 7b 59 2f da 24 b1 2d 94 e3 24 a1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'd0 54 08 d5 21 11 6b 7b 8c 6e 92 4a a8 14 0c 26'), textout=CWbytearray(b'2e 53 45 3d 15 03 75 35 f1 98 b1 ae 6f f8 ff ae'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'c4 8c 08 19 78 41 1b 2b 63 0d ca 6f ac 72 a5 0f'), textout=CWbytearray(b'17 a4 bc 28 a0 35 4a 97 ea b0 75 2b 1b ce 4a 4b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'd6 67 ca 15 63 33 d7 7c d3 04 f8 ee 0e 1f 09 49'), textout=CWbytearray(b'6e 33 c1 0c b8 3d aa be 81 b0 58 08 ac 64 03 02'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.078125  , ...,  0.01953125,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'b1 f1 99 42 6d de 9b 91 c0 ac 59 78 19 1a 7f 1a'), textout=CWbytearray(b'cb 77 06 e3 09 a9 31 b0 77 bd 70 6f cd 9b e3 e7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'42 85 02 48 3b 7a 9c ab b2 f8 a3 9f e9 cd 80 d7'), textout=CWbytearray(b'0d b1 fd fc e8 ff e5 69 79 07 3b 04 a1 57 1e b6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.11328125, -0.08203125, ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'e9 bb f5 ef 1e be 49 da df 35 7a 34 34 4c 1c a4'), textout=CWbytearray(b'a8 34 4a 9a dd 6a ac 11 67 33 51 33 c9 13 a3 86'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'10 41 60 5e f6 50 49 42 2e d3 9b 20 26 47 1b 31'), textout=CWbytearray(b'89 1e da 8a 26 45 10 22 2c 54 69 9e e0 91 f7 f3'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'6e 20 6d 53 19 5b f8 2e de 90 ae 05 00 c3 cd 3c'), textout=CWbytearray(b'8f d3 48 6a f5 ee 57 7f b4 cc 53 ea fe ae c0 db'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'21 04 09 d2 38 42 24 44 60 14 cb c9 96 2f 56 23'), textout=CWbytearray(b'bf 75 6d f7 8e b7 16 27 8e d8 66 bc f6 a1 90 34'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.125     , -0.07421875, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'fd a9 22 84 a3 22 d1 0a 38 54 a0 60 e0 33 4e 04'), textout=CWbytearray(b'af a5 8f 9d 23 f4 a2 fd 4c d6 67 1c 74 ea 64 e5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'bc 0b 66 03 4a 02 14 d3 34 b1 fb 11 dc e2 f9 de'), textout=CWbytearray(b'2c 6d 91 5c 86 7e 3a 7d 1b 2e 61 4e 85 08 63 e9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08203125, ...,  0.01171875,
           -0.16015625,  0.03515625]), textin=CWbytearray(b'2e 4c 0c 1d c3 32 dc 31 d4 e5 6f 0b 5f 1d 10 09'), textout=CWbytearray(b'74 c6 27 7c 6f f7 67 de 9e 3e 6e 96 bd f6 c6 07'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'b2 a3 85 5d ad fe da 0d 32 6d 7b f3 52 5b 8d 69'), textout=CWbytearray(b'b1 0f fb 9e 1b 81 41 09 63 4b 64 69 3f 50 ed d1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'fc f0 f1 86 65 4e c7 76 09 da 77 2a 13 2a e7 20'), textout=CWbytearray(b'22 87 e9 b4 37 30 cc 7d 04 b3 25 7f 93 7d 75 a2'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'84 09 18 ef 04 f1 a2 7c e8 5b 6a 77 47 64 88 36'), textout=CWbytearray(b'70 7a 4a cd 7f ab 52 fc fe bc 8c 46 23 5d d6 50'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'41 17 1e 20 cb f2 d9 15 1c 81 25 9d ee 4a 44 f2'), textout=CWbytearray(b'7d 20 43 c3 98 2e 55 a3 84 5c 51 3b 70 27 b1 b5'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.015625  ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'05 d6 66 94 ee 2c 17 c4 87 2e d9 1c ef 91 24 e3'), textout=CWbytearray(b'9f ac 10 05 e4 88 86 f4 a4 b7 e1 1f a4 fc 3a 88'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'de 33 3e 9b 5a 4b 56 87 f6 f4 c1 50 7d e4 71 18'), textout=CWbytearray(b'59 bd 24 57 3f f3 84 90 8d e9 99 1c 48 dc 11 c7'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'ad 04 bc e9 a0 7e 70 fa ca 97 37 f2 af ff ed a8'), textout=CWbytearray(b'6b 3e 3a c2 be af aa 2d 58 8b 60 0c 35 59 20 1e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.08203125, ...,  0.015625  ,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'8c fe 8e f0 21 fe 08 e2 63 85 42 60 09 b1 6e 8d'), textout=CWbytearray(b'6e 7c 3e c1 a1 bf 05 27 19 e4 8d 96 85 60 c6 95'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12109375,  0.12109375, -0.0859375 , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'db 30 11 ef c9 0f f1 f9 5e b2 d3 da fd b5 d2 6e'), textout=CWbytearray(b'a9 a3 15 a3 82 b3 4e 2b 60 37 67 84 44 e9 ad fc'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.02734375,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'33 a9 dc 7b ed 63 da 70 24 c9 bc 84 f9 d3 c3 ac'), textout=CWbytearray(b'f1 28 03 34 3e f1 4d 07 b2 33 da 18 0b 81 e5 89'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.13671875, -0.07421875, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'a7 00 75 0c 55 58 ff ff c3 b9 6e 44 a2 53 62 70'), textout=CWbytearray(b'47 88 a3 3c 81 75 12 de 82 5f f3 f9 25 4f 9a 69'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'7a da 2e a6 eb e4 99 94 dc 4c 95 2e 7d f9 9a e1'), textout=CWbytearray(b'01 99 71 c9 cc 74 df 91 0b 60 73 b5 b5 f6 50 5a'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'cf 38 7f 22 7c 3f 70 58 fa 74 41 1a de 29 4f 0f'), textout=CWbytearray(b'fb 42 28 84 78 3a cd 0e d8 b8 60 eb c8 d0 76 7e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1328125 ,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'3b 57 78 ee 75 51 28 3e a4 67 3f 23 bd 25 69 83'), textout=CWbytearray(b'b6 62 8c e3 a0 42 e4 b5 51 c8 05 6f 25 6e 4b 7e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.015625  ,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'67 5a 42 d5 9c 3a df e8 c9 9e 9c 9d 09 05 7a af'), textout=CWbytearray(b'db f6 6b 1e e6 1f 81 09 a5 f4 0a 49 d4 f2 cc 1b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'15 4f 99 4b c8 d0 86 67 c2 66 c2 b5 12 32 57 5a'), textout=CWbytearray(b'7e 0c 2f 67 de b4 58 01 0f 9e 8d b1 1f 35 ae 17'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0703125 , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'93 ac 98 be ee c4 a9 80 12 7e 3d aa 9a 7b b3 e4'), textout=CWbytearray(b'60 48 95 ca 71 cc 9d 58 8c 68 52 d7 b5 01 23 c1'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01953125,
           -0.1484375 ,  0.04296875]), textin=CWbytearray(b'32 d6 f8 32 4a 38 ee 22 7e 05 ac b4 06 e8 ba a0'), textout=CWbytearray(b'd9 66 99 e7 24 3a 3b 74 fb a0 b6 ca 25 5d 90 09'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12890625, -0.07421875, ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'f1 75 1a 85 b6 48 c1 cc e1 e5 37 4e a3 3d 64 01'), textout=CWbytearray(b'18 6f ee 83 97 89 ad e0 28 85 ca ab 5f dd 12 83'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.125     , -0.078125  , ...,  0.01171875,
           -0.16015625,  0.03125   ]), textin=CWbytearray(b'f6 88 7d 00 49 ee b0 8e c5 e3 1a 5b 2e ad fd b2'), textout=CWbytearray(b'41 fe 79 ee f7 4e 95 87 f6 13 6c a9 43 d7 17 70'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12890625, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'bf cc c5 fd ce 9f 1e 16 51 e9 55 20 5e c6 6d 9e'), textout=CWbytearray(b'3e 9a 58 82 0c 2f e8 96 81 68 0f 0b d3 58 6a eb'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'49 86 52 02 57 df 1b 79 60 58 50 2b 84 09 fb a4'), textout=CWbytearray(b'85 89 45 ad 7a f4 7a 51 9b 9e f0 b8 b5 e8 38 7e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.015625  ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'11 d1 24 2a ab 01 ff 97 8b 20 f5 c9 84 39 2b 7d'), textout=CWbytearray(b'f4 2b dc d8 fa 29 6a 09 78 78 83 88 f6 8c 60 cf'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'f6 d2 f5 31 9c 9a 23 e4 db a5 c6 5d 31 c2 e7 38'), textout=CWbytearray(b'0f d2 72 14 ee 78 12 40 67 09 f7 0b d2 0f 08 88'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.0859375 , ...,  0.02734375,
           -0.15234375,  0.03515625]), textin=CWbytearray(b'bf 9c 1f 37 e5 a3 0f f3 c2 98 de a1 3e 0d ec ff'), textout=CWbytearray(b'b6 45 26 3e a0 bd cd f2 f8 b4 d9 b0 38 a7 e7 49'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.04296875]), textin=CWbytearray(b'df c7 74 eb e6 a4 48 91 7a 94 39 14 6b e3 f6 4d'), textout=CWbytearray(b'5a 31 c4 cc e0 86 f5 62 f2 e2 71 87 d3 5f 78 90'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.015625  ,
           -0.15625   ,  0.02734375]), textin=CWbytearray(b'37 8b 38 5a e2 13 e3 ee bf 81 e1 80 e6 76 9f c9'), textout=CWbytearray(b'08 fe f5 84 19 04 fb a7 5f 58 9e 17 a5 7e 42 f6'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'df 71 b5 d0 25 f3 ac 2f d0 fd ae af 3e d5 71 ca'), textout=CWbytearray(b'74 0d 0f cd 50 76 ee 8e 83 63 d0 66 a3 34 1a 22'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.1484375 ,  0.12109375, -0.0859375 , ...,  0.01953125,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'b0 ce ba ac 49 fe 63 57 ae 62 3e c9 ba 7b 71 32'), textout=CWbytearray(b'1c f1 11 a6 55 f1 5b 56 0a 9a 16 c2 c2 81 2a 03'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.12109375, -0.078125  , ...,  0.01953125,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'2a a1 ad 3d be b2 a4 11 7f ae a3 ff 61 d8 fb 2b'), textout=CWbytearray(b'25 e3 b5 5d 3e 88 4b 3c fd 65 c2 ee 4d e4 4f 0b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.0234375 ,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'bc 14 3d 2e 74 c7 42 bf 95 38 26 cb 61 29 01 8b'), textout=CWbytearray(b'14 54 61 84 78 d5 33 94 10 94 ef 47 df e6 c4 24'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.1171875 , -0.078125  , ...,  0.01953125,
           -0.1484375 ,  0.03515625]), textin=CWbytearray(b'90 e6 e3 67 2d 71 f9 55 cb 70 bd 33 64 ec d6 38'), textout=CWbytearray(b'e4 67 1f 06 04 f4 3e a8 94 f1 96 d3 36 27 bb 55'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.08984375, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'80 c7 cf 10 c3 13 65 cc b8 19 e2 d3 5d 9e a4 b3'), textout=CWbytearray(b'7e 73 d3 bd 3c a0 1f 4b df fb 15 b9 fa 0f e8 7e'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.140625  ,  0.125     , -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03515625]), textin=CWbytearray(b'a4 97 f7 32 d2 83 d9 fb 5c 18 99 32 99 24 f2 dc'), textout=CWbytearray(b'78 8a 74 84 47 fb 4a 33 6f 0b ca b0 1c bd dd d9'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12890625, -0.07421875, ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'51 1f 80 79 37 ee 84 26 21 87 f4 1d a8 92 ba 7d'), textout=CWbytearray(b'75 ba 42 b9 b9 3f 1b a8 91 ef ac 04 16 7e cf 26'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.125     , -0.078125  , ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'4d 2d 59 3a 5d f7 93 2a 9a 50 d6 f7 be 9e 35 93'), textout=CWbytearray(b'25 4b ff 00 02 4b 82 3d 62 14 5b 54 b3 92 ed 93'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.1171875 , -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'93 82 55 04 31 e9 91 44 c3 98 d4 4a a1 f2 79 74'), textout=CWbytearray(b'f1 10 c7 d4 3e 64 02 75 f0 e9 81 61 8a 22 7d 1b'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.14453125,  0.12109375, -0.08203125, ...,  0.02734375,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'4b cf d7 8c f6 36 76 c1 56 06 bf c0 ac 8e b7 89'), textout=CWbytearray(b'4b b8 e0 2b 77 eb fb 75 07 37 44 a4 71 6f b3 6c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.078125  , ...,  0.0234375 ,
           -0.15234375,  0.02734375]), textin=CWbytearray(b'd3 f0 a1 44 48 6c fc d4 05 31 87 61 9d af 42 85'), textout=CWbytearray(b'26 37 07 24 82 88 c3 2a 3f 2c 26 4b 10 b2 93 e4'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.07421875, ...,  0.01171875,
           -0.15234375,  0.03125   ]), textin=CWbytearray(b'55 a1 b0 1a b2 00 cb 36 6b f2 d5 87 85 8c d7 62'), textout=CWbytearray(b'44 e4 f9 10 f2 4f 6e 5e ff 22 84 da ed 67 bc 38'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.13671875,  0.12109375, -0.078125  , ...,  0.0234375 ,
           -0.1484375 ,  0.03125   ]), textin=CWbytearray(b'a9 04 ab 95 d2 27 4d 75 dc 4d 45 5b 43 b9 e3 3b'), textout=CWbytearray(b'52 22 24 38 18 ad 25 7c a8 b3 49 38 78 d4 89 5d'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'33 53 0c 83 8f e4 9e 82 10 db 81 28 8f 50 71 18'), textout=CWbytearray(b'8e 02 54 8b 9a 67 0d a0 1b a8 1c 20 3a 5c e1 4c'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.12890625,  0.12109375, -0.08203125, ...,  0.01953125,
           -0.15625   ,  0.03125   ]), textin=CWbytearray(b'cc 51 3e 72 f1 3e 62 4f b0 46 05 a2 3d bf f0 2b'), textout=CWbytearray(b'6c 08 4c 7a e4 a1 af 7d 66 ce 08 4f 4e d2 a0 4f'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))
    Trace(wave=array([ 0.125     ,  0.12109375, -0.0859375 , ...,  0.01171875,
           -0.15234375,  0.0390625 ]), textin=CWbytearray(b'02 3c 71 2d 3d ed 45 db 50 29 fa 53 ad 9b 19 44'), textout=CWbytearray(b'07 32 3d f7 31 43 d7 07 03 07 16 3e bf 17 65 33'), key=CWbytearray(b'2b 7e 15 16 28 ae d2 a6 ab f7 15 88 09 cf 4f 3c'))


Analysis
--------

As we discussed above, our goal here is to find the biggest difference
of means out of the possible subkey values we could have. First, we'll
get some values and functions that will be useful for our calculations.
We'll be using ``intermediate()`` later to get the output of the SBox
from a plaintext and key input.


**In [7]:**

.. code:: ipython3

    numtraces = np.shape(trace_array)[0] #total number of traces
    numpoints = np.shape(trace_array)[1] #samples per trace
    
    sbox = (
        0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
        0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
        0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
        0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
        0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
        0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
        0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
        0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
        0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
        0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
        0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
        0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
        0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
        0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
        0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
        0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16)
    
    def intermediate(pt, keyguess):
        return sbox[pt ^ keyguess]

Our first step here will be separating our traces into different groups
based on the SBox's output. As mentioned earlier, we're separating based
on the least significant bit, but really any bit would work (as a test,
you can change this and see if the attack still works):

.. code:: python

    one_list = []
    zero_list = []
    for tnum in range(numtraces):
        if (intermediate(textin_array[tnum][subkey], kguess) & 1):
            one_list.append(trace_array[tnum])
        else:
            zero_list.append(trace_array[tnum])

Then calculate the difference of means:

.. code:: python

    one_avg = np.asarray(one_list).mean(axis=0)
    zero_avg = np.asarray(zero_list).mean(axis=0)
    mean_diffs[kguess] = np.max(abs(one_avg - zero_avg))

We'll need to repeat this with each possible key guess and then pick the
one with the highest difference of means:

.. code:: python

    guess = np.argsort(mean_diffs)[-1]
    key_guess.append(guess)
    print(hex(guess))
    print(mean_diffs[guess])

Finally, altogether and attacking all of the subkeys:


**In [8]:**

.. code:: ipython3

    from tqdm import tnrange
    import numpy as np
    mean_diffs = np.zeros(255)
    key_guess = []
    known_key = known_keys[0]
    plots = []
    for subkey in tnrange(0, 16, desc="Attacking Subkey"):
        for kguess in tnrange(255, desc="Keyguess", leave=False):
            one_list = []
            zero_list = []
            
            for tnum in range(numtraces):
                if (intermediate(textin_array[tnum][subkey], kguess) & 1): #LSB is 1
                    one_list.append(trace_array[tnum])
                else:
                    zero_list.append(trace_array[tnum])
            one_avg = np.asarray(one_list).mean(axis=0)
            zero_avg = np.asarray(zero_list).mean(axis=0)
            mean_diffs[kguess] = np.max(abs(one_avg - zero_avg))
            if kguess == known_key[subkey]:
                plots.append(abs(one_avg - zero_avg))
        guess = np.argsort(mean_diffs)[-1]
        key_guess.append(guess)
        print(hex(guess) + "(real = 0x{:02X})".format(known_key[subkey]))
        #mean_diffs.sort()
        print(mean_diffs[guess])
        print(mean_diffs[known_key[subkey]])


**Out [8]:**







.. parsed-literal::

    0x2b(real = 0x2B)
    0.010546874999999997
    0.010546874999999997
    






.. parsed-literal::

    0x7e(real = 0x7E)
    0.010740099465463164
    0.010740099465463164
    






.. parsed-literal::

    0x15(real = 0x15)
    0.010384976342157744
    0.010384976342157744
    






.. parsed-literal::

    0x16(real = 0x16)
    0.009832248428971721
    0.009832248428971721
    






.. parsed-literal::

    0x28(real = 0x28)
    0.009752768544296707
    0.009752768544296707
    






.. parsed-literal::

    0xae(real = 0xAE)
    0.009455202523180821
    0.009455202523180821
    






.. parsed-literal::

    0xd2(real = 0xD2)
    0.00918931024216213
    0.00918931024216213
    




With that done, we should now have the correct key:


**In [9]:**

.. code:: ipython3

    print(key_guess)
    print(known_key)


**Out [9]:**



.. parsed-literal::

    [43, 126, 21, 22, 40, 174, 210, 166, 171, 247, 21, 136, 9, 207, 79, 60]
    [ 43 126  21  22  40 174 210 166 171 247  21 136   9 207  79  60]
    


We can also plot the difference of means for a few of the correct subkey
bytes:


**In [10]:**

.. code:: ipython3

    from bokeh.plotting import figure, show
    from bokeh.io import output_notebook
    
    output_notebook()
    p = figure()
    p.line(range(numpoints), plots[0], line_color='green')
    p.line(range(numpoints), plots[1], line_color='red')
    p.line(range(numpoints), plots[15], line_color='blue')
    show(p)


**Out [10]:**


.. raw:: html

    <div class="data_html">
        
        <div class="bk-root">
            <a href="https://bokeh.pydata.org" target="_blank" class="bk-logo bk-logo-small bk-logo-notebook"></a>
            <span id="1001">Loading BokehJS ...</span>
        </div>
    </div>



.. raw:: html

    

    <div id="6d28a49e-df8d-47fd-aa64-846447410897"></div>
    <div class="output_subarea output_javascript ">
    <script type="text/javascript">
    var element = $('#6d28a49e-df8d-47fd-aa64-846447410897');
        
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = true;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      var JS_MIME_TYPE = 'application/javascript';
      var HTML_MIME_TYPE = 'text/html';
      var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';
      var CLASS_NAME = 'output_bokeh rendered_html';
    
      /**
       * Render data to the DOM node
       */
      function render(props, node) {
        var script = document.createElement("script");
        node.appendChild(script);
      }
    
      /**
       * Handle when an output is cleared or removed
       */
      function handleClearOutput(event, handle) {
        var cell = handle.cell;
    
        var id = cell.output_area._bokeh_element_id;
        var server_id = cell.output_area._bokeh_server_id;
        // Clean up Bokeh references
        if (id != null && id in Bokeh.index) {
          Bokeh.index[id].model.document.clear();
          delete Bokeh.index[id];
        }
    
        if (server_id !== undefined) {
          // Clean up Bokeh references
          var cmd = "from bokeh.io.state import curstate; print(curstate().uuid_to_server['" + server_id + "'].get_sessions()[0].document.roots[0]._id)";
          cell.notebook.kernel.execute(cmd, {
            iopub: {
              output: function(msg) {
                var id = msg.content.text.trim();
                if (id in Bokeh.index) {
                  Bokeh.index[id].model.document.clear();
                  delete Bokeh.index[id];
                }
              }
            }
          });
          // Destroy server and session
          var cmd = "import bokeh.io.notebook as ion; ion.destroy_server('" + server_id + "')";
          cell.notebook.kernel.execute(cmd);
        }
      }
    
      /**
       * Handle when a new output is added
       */
      function handleAddOutput(event, handle) {
        var output_area = handle.output_area;
        var output = handle.output;
    
        // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only
        if ((output.output_type != "display_data") || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {
          return
        }
    
        var toinsert = output_area.element.find("." + CLASS_NAME.split(' ')[0]);
    
        if (output.metadata[EXEC_MIME_TYPE]["id"] !== undefined) {
          toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];
          // store reference to embed id on output_area
          output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE]["id"];
        }
        if (output.metadata[EXEC_MIME_TYPE]["server_id"] !== undefined) {
          var bk_div = document.createElement("div");
          bk_div.innerHTML = output.data[HTML_MIME_TYPE];
          var script_attrs = bk_div.children[0].attributes;
          for (var i = 0; i < script_attrs.length; i++) {
            toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);
          }
          // store reference to server id on output_area
          output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE]["server_id"];
        }
      }
    
      function register_renderer(events, OutputArea) {
    
        function append_mime(data, metadata, element) {
          // create a DOM node to render to
          var toinsert = this.create_output_subarea(
            metadata,
            CLASS_NAME,
            EXEC_MIME_TYPE
          );
          this.keyboard_manager.register_events(toinsert);
          // Render to node
          var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};
          render(props, toinsert[toinsert.length - 1]);
          element.append(toinsert);
          return toinsert
        }
    
        /* Handle when an output is cleared or removed */
        events.on('clear_output.CodeCell', handleClearOutput);
        events.on('delete.Cell', handleClearOutput);
    
        /* Handle when a new output is added */
        events.on('output_added.OutputArea', handleAddOutput);
    
        /**
         * Register the mime type and append_mime function with output_area
         */
        OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {
          /* Is output safe? */
          safe: true,
          /* Index of renderer in `output_area.display_order` */
          index: 0
        });
      }
    
      // register the mime type if in Jupyter Notebook environment and previously unregistered
      if (root.Jupyter !== undefined) {
        var events = require('base/js/events');
        var OutputArea = require('notebook/js/outputarea').OutputArea;
    
        if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {
          register_renderer(events, OutputArea);
        }
      }
    
      
      if (typeof (root._bokeh_timeout) === "undefined" || force === true) {
        root._bokeh_timeout = Date.now() + 5000;
        root._bokeh_failed_load = false;
      }
    
      var NB_LOAD_WARNING = {'data': {'text/html':
         "<div style='background-color: #fdd'>\n"+
         "<p>\n"+
         "BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \n"+
         "may be due to a slow or bad network connection. Possible fixes:\n"+
         "</p>\n"+
         "<ul>\n"+
         "<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\n"+
         "<li>use INLINE resources instead, as so:</li>\n"+
         "</ul>\n"+
         "<code>\n"+
         "from bokeh.resources import INLINE\n"+
         "output_notebook(resources=INLINE)\n"+
         "</code>\n"+
         "</div>"}};
    
      function display_loaded() {
        var el = document.getElementById("1001");
        if (el != null) {
          el.textContent = "BokehJS is loading...";
        }
        if (root.Bokeh !== undefined) {
          if (el != null) {
            el.textContent = "BokehJS " + root.Bokeh.version + " successfully loaded.";
          }
        } else if (Date.now() < root._bokeh_timeout) {
          setTimeout(display_loaded, 100)
        }
      }
    
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error() {
          console.error("failed to load " + url);
        }
    
        for (var i = 0; i < css_urls.length; i++) {
          var url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error;
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error;
          element.async = false;
          element.src = url;
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };var element = document.getElementById("1001");
      if (element == null) {
        console.error("Bokeh: ERROR: autoload.js configured with elementid '1001' but no matching script tag was found. ")
        return false;
      }
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      var js_urls = ["https://cdn.pydata.org/bokeh/release/bokeh-1.2.0.min.js", "https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.2.0.min.js", "https://cdn.pydata.org/bokeh/release/bokeh-tables-1.2.0.min.js", "https://cdn.pydata.org/bokeh/release/bokeh-gl-1.2.0.min.js"];
      var css_urls = ["https://cdn.pydata.org/bokeh/release/bokeh-1.2.0.min.css", "https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.2.0.min.css", "https://cdn.pydata.org/bokeh/release/bokeh-tables-1.2.0.min.css"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          
        },
        function(Bokeh) {} // ensure no trailing comma for IE
      ];
    
      function run_inline_js() {
        
        if ((root.Bokeh !== undefined) || (force === true)) {
          for (var i = 0; i < inline_js.length; i++) {
            inline_js[i].call(root, root.Bokeh);
          }if (force === true) {
            display_loaded();
          }} else if (Date.now() < root._bokeh_timeout) {
          setTimeout(run_inline_js, 100);
        } else if (!root._bokeh_failed_load) {
          console.log("Bokeh: BokehJS failed to load within specified timeout.");
          root._bokeh_failed_load = true;
        } else if (force !== true) {
          var cell = $(document.getElementById("1001")).parents('.cell').data().cell;
          cell.output_area.append_execute_result(NB_LOAD_WARNING)
        }
    
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
    </script>
    </div>


.. raw:: html

    <div class="data_html">
        
    
    
    
    
    
      <div class="bk-root" id="07e5acc2-2f00-45af-8893-1b2e45d995f7" data-root-id="1002"></div>
    
    </div>



.. raw:: html

    

    <div id="2339f27b-0d91-4962-be94-beb4d041ac5b"></div>
    <div class="output_subarea output_javascript ">
    <script type="text/javascript">
    var element = $('#2339f27b-0d91-4962-be94-beb4d041ac5b');
        (function(root) {
      function embed_document(root) {
        
      var docs_json = {"42aed4fd-e7ee-48cf-aff9-9ff191fa0ea3":{"roots":{"references":[{"attributes":{"below":[{"id":"1011","type":"LinearAxis"}],"center":[{"id":"1015","type":"Grid"},{"id":"1020","type":"Grid"}],"left":[{"id":"1016","type":"LinearAxis"}],"renderers":[{"id":"1037","type":"GlyphRenderer"},{"id":"1042","type":"GlyphRenderer"},{"id":"1047","type":"GlyphRenderer"}],"title":{"id":"1050","type":"Title"},"toolbar":{"id":"1027","type":"Toolbar"},"x_range":{"id":"1003","type":"DataRange1d"},"x_scale":{"id":"1007","type":"LinearScale"},"y_range":{"id":"1005","type":"DataRange1d"},"y_scale":{"id":"1009","type":"LinearScale"}},"id":"1002","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1025","type":"ResetTool"},{"attributes":{"source":{"id":"1034","type":"ColumnDataSource"}},"id":"1038","type":"CDSView"},{"attributes":{},"id":"1026","type":"HelpTool"},{"attributes":{"callback":null,"data":{"x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,4266,4267,4268,4269,4270,4271,4272,4273,4274,4275,4276,4277,4278,4279,4280,4281,4282,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4294,4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,4327,4328,4329,4330,4331,4332,4333,4334,4335,4336,4337,4338,4339,4340,4341,4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,4358,4359,4360,4361,4362,4363,4364,4365,4366,4367,4368,4369,4370,4371,4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,4417,4418,4419,4420,4421,4422,4423,4424,4425,4426,4427,4428,4429,4430,4431,4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,4444,4445,4446,4447,4448,4449,4450,4451,4452,4453,4454,4455,4456,4457,4458,4459,4460,4461,4462,4463,4464,4465,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,4490,4491,4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,4519,4520,4521,4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,4536,4537,4538,4539,4540,4541,4542,4543,4544,4545,4546,4547,4548,4549,4550,4551,4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,4568,4569,4570,4571,4572,4573,4574,4575,4576,4577,4578,4579,4580,4581,4582,4583,4584,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,4612,4613,4614,4615,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,4643,4644,4645,4646,4647,4648,4649,4650,4651,4652,4653,4654,4655,4656,4657,4658,4659,4660,4661,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,4683,4684,4685,4686,4687,4688,4689,4690,4691,4692,4693,4694,4695,4696,4697,4698,4699,4700,4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,4712,4713,4714,4715,4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,4732,4733,4734,4735,4736,4737,4738,4739,4740,4741,4742,4743,4744,4745,4746,4747,4748,4749,4750,4751,4752,4753,4754,4755,4756,4757,4758,4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,4769,4770,4771,4772,4773,4774,4775,4776,4777,4778,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,4789,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,4804,4805,4806,4807,4808,4809,4810,4811,4812,4813,4814,4815,4816,4817,4818,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,4833,4834,4835,4836,4837,4838,4839,4840,4841,4842,4843,4844,4845,4846,4847,4848,4849,4850,4851,4852,4853,4854,4855,4856,4857,4858,4859,4860,4861,4862,4863,4864,4865,4866,4867,4868,4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,4880,4881,4882,4883,4884,4885,4886,4887,4888,4889,4890,4891,4892,4893,4894,4895,4896,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,4910,4911,4912,4913,4914,4915,4916,4917,4918,4919,4920,4921,4922,4923,4924,4925,4926,4927,4928,4929,4930,4931,4932,4933,4934,4935,4936,4937,4938,4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,4981,4982,4983,4984,4985,4986,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998,4999],"y":{"__ndarray__":"","dtype":"float64","shape":[5000]}},"selected":{"id":"1057","type":"Selection"},"selection_policy":{"id":"1058","type":"UnionRenderers"}},"id":"1039","type":"ColumnDataSource"},{"attributes":{"callback":null,"data":{"x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,4266,4267,4268,4269,4270,4271,4272,4273,4274,4275,4276,4277,4278,4279,4280,4281,4282,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4294,4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,4327,4328,4329,4330,4331,4332,4333,4334,4335,4336,4337,4338,4339,4340,4341,4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,4358,4359,4360,4361,4362,4363,4364,4365,4366,4367,4368,4369,4370,4371,4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,4417,4418,4419,4420,4421,4422,4423,4424,4425,4426,4427,4428,4429,4430,4431,4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,4444,4445,4446,4447,4448,4449,4450,4451,4452,4453,4454,4455,4456,4457,4458,4459,4460,4461,4462,4463,4464,4465,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,4490,4491,4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,4519,4520,4521,4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,4536,4537,4538,4539,4540,4541,4542,4543,4544,4545,4546,4547,4548,4549,4550,4551,4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,4568,4569,4570,4571,4572,4573,4574,4575,4576,4577,4578,4579,4580,4581,4582,4583,4584,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,4612,4613,4614,4615,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,4643,4644,4645,4646,4647,4648,4649,4650,4651,4652,4653,4654,4655,4656,4657,4658,4659,4660,4661,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,4683,4684,4685,4686,4687,4688,4689,4690,4691,4692,4693,4694,4695,4696,4697,4698,4699,4700,4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,4712,4713,4714,4715,4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,4732,4733,4734,4735,4736,4737,4738,4739,4740,4741,4742,4743,4744,4745,4746,4747,4748,4749,4750,4751,4752,4753,4754,4755,4756,4757,4758,4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,4769,4770,4771,4772,4773,4774,4775,4776,4777,4778,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,4789,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,4804,4805,4806,4807,4808,4809,4810,4811,4812,4813,4814,4815,4816,4817,4818,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,4833,4834,4835,4836,4837,4838,4839,4840,4841,4842,4843,4844,4845,4846,4847,4848,4849,4850,4851,4852,4853,4854,4855,4856,4857,4858,4859,4860,4861,4862,4863,4864,4865,4866,4867,4868,4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,4880,4881,4882,4883,4884,4885,4886,4887,4888,4889,4890,4891,4892,4893,4894,4895,4896,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,4910,4911,4912,4913,4914,4915,4916,4917,4918,4919,4920,4921,4922,4923,4924,4925,4926,4927,4928,4929,4930,4931,4932,4933,4934,4935,4936,4937,4938,4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,4981,4982,4983,4984,4985,4986,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998,4999],"y":{"__ndarray__":"","dtype":"float64","shape":[5000]}},"selected":{"id":"1059","type":"Selection"},"selection_policy":{"id":"1060","type":"UnionRenderers"}},"id":"1044","type":"ColumnDataSource"},{"attributes":{"line_color":"red","x":{"field":"x"},"y":{"field":"y"}},"id":"1040","type":"Line"},{"attributes":{"source":{"id":"1044","type":"ColumnDataSource"}},"id":"1048","type":"CDSView"},{"attributes":{"overlay":{"id":"1061","type":"BoxAnnotation"}},"id":"1023","type":"BoxZoomTool"},{"attributes":{"data_source":{"id":"1039","type":"ColumnDataSource"},"glyph":{"id":"1040","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1041","type":"Line"},"selection_glyph":null,"view":{"id":"1043","type":"CDSView"}},"id":"1042","type":"GlyphRenderer"},{"attributes":{"text":""},"id":"1050","type":"Title"},{"attributes":{},"id":"1007","type":"LinearScale"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","x":{"field":"x"},"y":{"field":"y"}},"id":"1041","type":"Line"},{"attributes":{"data_source":{"id":"1044","type":"ColumnDataSource"},"glyph":{"id":"1045","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1046","type":"Line"},"selection_glyph":null,"view":{"id":"1048","type":"CDSView"}},"id":"1047","type":"GlyphRenderer"},{"attributes":{},"id":"1055","type":"Selection"},{"attributes":{"callback":null},"id":"1005","type":"DataRange1d"},{"attributes":{"callback":null},"id":"1003","type":"DataRange1d"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","x":{"field":"x"},"y":{"field":"y"}},"id":"1046","type":"Line"},{"attributes":{"source":{"id":"1039","type":"ColumnDataSource"}},"id":"1043","type":"CDSView"},{"attributes":{},"id":"1052","type":"BasicTickFormatter"},{"attributes":{},"id":"1054","type":"BasicTickFormatter"},{"attributes":{"callback":null,"data":{"x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3461,3462,3463,3464,3465,3466,3467,3468,3469,3470,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,3701,3702,3703,3704,3705,3706,3707,3708,3709,3710,3711,3712,3713,3714,3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,3944,3945,3946,3947,3948,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,4109,4110,4111,4112,4113,4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,4125,4126,4127,4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,4138,4139,4140,4141,4142,4143,4144,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,4220,4221,4222,4223,4224,4225,4226,4227,4228,4229,4230,4231,4232,4233,4234,4235,4236,4237,4238,4239,4240,4241,4242,4243,4244,4245,4246,4247,4248,4249,4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,4266,4267,4268,4269,4270,4271,4272,4273,4274,4275,4276,4277,4278,4279,4280,4281,4282,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4294,4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,4327,4328,4329,4330,4331,4332,4333,4334,4335,4336,4337,4338,4339,4340,4341,4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,4358,4359,4360,4361,4362,4363,4364,4365,4366,4367,4368,4369,4370,4371,4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,4417,4418,4419,4420,4421,4422,4423,4424,4425,4426,4427,4428,4429,4430,4431,4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,4444,4445,4446,4447,4448,4449,4450,4451,4452,4453,4454,4455,4456,4457,4458,4459,4460,4461,4462,4463,4464,4465,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,4490,4491,4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,4519,4520,4521,4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,4536,4537,4538,4539,4540,4541,4542,4543,4544,4545,4546,4547,4548,4549,4550,4551,4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,4568,4569,4570,4571,4572,4573,4574,4575,4576,4577,4578,4579,4580,4581,4582,4583,4584,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,4612,4613,4614,4615,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,4643,4644,4645,4646,4647,4648,4649,4650,4651,4652,4653,4654,4655,4656,4657,4658,4659,4660,4661,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,4683,4684,4685,4686,4687,4688,4689,4690,4691,4692,4693,4694,4695,4696,4697,4698,4699,4700,4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,4712,4713,4714,4715,4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,4732,4733,4734,4735,4736,4737,4738,4739,4740,4741,4742,4743,4744,4745,4746,4747,4748,4749,4750,4751,4752,4753,4754,4755,4756,4757,4758,4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,4769,4770,4771,4772,4773,4774,4775,4776,4777,4778,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,4789,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,4804,4805,4806,4807,4808,4809,4810,4811,4812,4813,4814,4815,4816,4817,4818,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,4833,4834,4835,4836,4837,4838,4839,4840,4841,4842,4843,4844,4845,4846,4847,4848,4849,4850,4851,4852,4853,4854,4855,4856,4857,4858,4859,4860,4861,4862,4863,4864,4865,4866,4867,4868,4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,4880,4881,4882,4883,4884,4885,4886,4887,4888,4889,4890,4891,4892,4893,4894,4895,4896,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,4910,4911,4912,4913,4914,4915,4916,4917,4918,4919,4920,4921,4922,4923,4924,4925,4926,4927,4928,4929,4930,4931,4932,4933,4934,4935,4936,4937,4938,4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,4981,4982,4983,4984,4985,4986,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998,4999],"y":{"__ndarray__":"","dtype":"float64","shape":[5000]}},"selected":{"id":"1055","type":"Selection"},"selection_policy":{"id":"1056","type":"UnionRenderers"}},"id":"1034","type":"ColumnDataSource"},{"attributes":{},"id":"1056","type":"UnionRenderers"},{"attributes":{},"id":"1057","type":"Selection"},{"attributes":{},"id":"1058","type":"UnionRenderers"},{"attributes":{},"id":"1009","type":"LinearScale"},{"attributes":{},"id":"1059","type":"Selection"},{"attributes":{"formatter":{"id":"1052","type":"BasicTickFormatter"},"ticker":{"id":"1012","type":"BasicTicker"}},"id":"1011","type":"LinearAxis"},{"attributes":{},"id":"1060","type":"UnionRenderers"},{"attributes":{},"id":"1017","type":"BasicTicker"},{"attributes":{},"id":"1012","type":"BasicTicker"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"1061","type":"BoxAnnotation"},{"attributes":{"ticker":{"id":"1012","type":"BasicTicker"}},"id":"1015","type":"Grid"},{"attributes":{"dimension":1,"ticker":{"id":"1017","type":"BasicTicker"}},"id":"1020","type":"Grid"},{"attributes":{"formatter":{"id":"1054","type":"BasicTickFormatter"},"ticker":{"id":"1017","type":"BasicTicker"}},"id":"1016","type":"LinearAxis"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","x":{"field":"x"},"y":{"field":"y"}},"id":"1036","type":"Line"},{"attributes":{"data_source":{"id":"1034","type":"ColumnDataSource"},"glyph":{"id":"1035","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1036","type":"Line"},"selection_glyph":null,"view":{"id":"1038","type":"CDSView"}},"id":"1037","type":"GlyphRenderer"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_multi":null,"active_scroll":"auto","active_tap":"auto","tools":[{"id":"1021","type":"PanTool"},{"id":"1022","type":"WheelZoomTool"},{"id":"1023","type":"BoxZoomTool"},{"id":"1024","type":"SaveTool"},{"id":"1025","type":"ResetTool"},{"id":"1026","type":"HelpTool"}]},"id":"1027","type":"Toolbar"},{"attributes":{},"id":"1021","type":"PanTool"},{"attributes":{},"id":"1022","type":"WheelZoomTool"},{"attributes":{"line_color":"green","x":{"field":"x"},"y":{"field":"y"}},"id":"1035","type":"Line"},{"attributes":{"line_color":"blue","x":{"field":"x"},"y":{"field":"y"}},"id":"1045","type":"Line"},{"attributes":{},"id":"1024","type":"SaveTool"}],"root_ids":["1002"]},"title":"Bokeh Application","version":"1.2.0"}};
      var render_items = [{"docid":"42aed4fd-e7ee-48cf-aff9-9ff191fa0ea3","roots":{"1002":"07e5acc2-2f00-45af-8893-1b2e45d995f7"}}];
      root.Bokeh.embed.embed_items_notebook(docs_json, render_items);
    
      }
      if (root.Bokeh !== undefined) {
        embed_document(root);
      } else {
        var attempts = 0;
        var timer = setInterval(function(root) {
          if (root.Bokeh !== undefined) {
            embed_document(root);
            clearInterval(timer);
          }
          attempts++;
          if (attempts > 100) {
            console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
            clearInterval(timer);
          }
        }, 10, root)
      }
    })(window);
    </script>
    </div>

Conclusion
----------

Congratulations, you have (hopefully) broken AES using a DPA attack! As
you might have discovered during this tutorial, there can be quite a few
issues with the difference of means method for breaking AES keys:

-  It's quite susceptible to noise
-  The attack can easily pick up other parts of the AES operation
-  The attack typically requires a lot of traces. These software AES
   implementations are pretty weak against power analysis, but they
   still required thousands of traces to break
-  Some targets (such as the XMega) require fine tuning settings to make
   the attack work

Nevertheless, using a difference of means attack can still be very
useful. For example, a later tutorial, PA\_Multi\_1, uses a difference
of means attack similar in concept to this one to break the signature of
an AES256 bootloader.

Tests
-----


**In [11]:**

.. code:: ipython3

    assert (known_key == key_guess).all(), "Failed to break key.\nGot: {}\nExp: {}".format(key_guess, known_key)


**In [ ]:**

